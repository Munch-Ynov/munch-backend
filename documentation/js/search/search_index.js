var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.25,1,2.456]],["body/controllers/AppController.html",[0,3.84,1,4.193,2,2.951,3,0.352,4,0.315,5,0.315,6,4.347,7,0.47,8,0.021,9,2.559,10,3.803,11,4.347,12,0.352,13,0.015,14,2.397,15,4.347,16,0.018,17,0.018]],["title/modules/AppModule.html",[18,1.931,19,2.456]],["body/modules/AppModule.html",[1,3.656,2,2.685,3,0.23,4,0.205,5,0.205,7,0.526,8,0.022,9,1.668,10,3.647,11,2.833,12,0.23,13,0.01,16,0.014,17,0.014,18,2.874,19,4.644,20,1.923,21,2.273,22,2.833,23,2.833,24,2.273,25,4.041,26,2.833,27,2.833,28,2.833,29,2.833,30,3.949,31,3.949,32,3.955,33,2.833,34,2.833,35,3.32,36,3.508,37,0.784,38,3.32,39,4.634,40,0.483,41,3.32,42,0.927,43,0.784,44,0.66,45,3.32,46,0.784,47,3.32,48,3.32,49,3.32,50,2.833,51,3.32,52,4.041,53,2.833,54,3.32,55,2.833,56,2.833,57,3.32,58,2.833,59,4.634,60,4.634,61,2.833,62,2.833,63,2.833,64,4.634,65,2.833,66,3.32,67,3.32,68,3.32,69,3.32,70,3.32,71,3.32,72,3.32,73,3.32,74,3.32,75,3.32,76,3.32,77,3.32,78,2.513,79,3.32]],["title/injectables/AppService.html",[10,2.078,80,2.25]],["body/injectables/AppService.html",[3,0.343,4,0.306,5,0.306,7,0.38,8,0.021,9,2.489,10,3.488,12,0.343,13,0.015,16,0.018,17,0.018,37,1.422,40,0.721,46,1.171,80,3.777,81,3.75,82,4.229,83,0.458,84,6.746,85,4.954,86,1.061,87,2.06,88,4.954,89,4.954]],["title/classes/Auth.html",[13,0.011,90,2.078]],["body/classes/Auth.html",[3,0.233,4,0.208,5,0.208,7,0.359,8,0.022,12,0.233,13,0.01,16,0.014,17,0.014,40,0.944,44,0.931,83,0.312,86,1.185,90,4.017,91,0.843,92,2.878,93,1.587,94,2.135,95,1.309,96,0.987,97,3.37,98,3.687,99,4.186,100,1.615,101,6.112,102,5.734,103,3.649,104,0.621,105,3.833,106,3.373,107,3.373,108,3.373,109,3.373,110,3.373,111,3.373,112,3.373,113,1.695,114,2.553,115,1.178,116,1.587,117,0.339,118,3.179,119,1.49,120,1.695,121,2.715,122,1.954,123,1.816,124,2.116,125,1.695]],["title/classes/AuthPrismaRepository.html",[13,0.011,126,2.715]],["body/classes/AuthPrismaRepository.html",[3,0.166,4,0.149,5,0.149,7,0.431,8,0.022,12,0.166,13,0.007,14,1.132,16,0.011,17,0.011,37,0.865,40,0.944,42,1.758,43,1.487,44,1.251,46,1.458,83,0.222,86,1.088,87,1,90,2.57,91,0.601,95,1.023,96,0.772,99,2.509,100,1.172,104,0.624,126,2.773,127,3.785,128,1.132,129,1.082,130,2.729,131,3.038,132,2.061,133,1.64,134,2.333,135,3.003,136,3.126,137,1.618,138,1.618,139,1.618,140,1.618,141,1.618,142,1.618,143,1.618,144,1.618,145,0.89,146,1.132,147,2.061,148,1.509,149,3.162,150,1.209,151,1.209,152,3.126,153,2.406,154,2.198,155,1.063,156,2.333,157,1.209,158,1.063,159,1.063,160,1.209,161,1.973,162,1.063,163,2.337,164,1.209,165,1.063,166,1.209,167,1.132,168,1.354,169,1.209,170,1.063,171,1.209,172,1.063,173,2.061,174,1.209,175,1.063,176,1.209,177,0.672,178,1.209,179,0.568,180,1.209,181,1.209,182,1.209,183,1.209,184,2.773,185,1.209,186,2.053,187,1.063,188,2.406,189,1.209,190,1.394,191,2.406,192,2.406]],["title/interfaces/AuthRepository.html",[117,0.361,131,2.456]],["body/interfaces/AuthRepository.html",[3,0.32,4,0.286,5,0.286,7,0.443,8,0.021,12,0.32,16,0.017,17,0.017,37,1.364,40,0.674,42,1.293,43,1.094,44,0.92,46,1.094,83,0.428,86,1.109,90,2.682,99,3.17,104,0.609,117,0.466,129,1.705,131,4.309,136,4.927,152,4.927,154,2.016,177,1.293,179,1.487,193,1.712,194,3.951,195,4.629,196,2.178]],["title/classes/Category.html",[13,0.011,115,1.252]],["body/classes/Category.html",[3,0.284,4,0.254,5,0.254,7,0.41,8,0.022,12,0.284,13,0.012,16,0.016,17,0.016,40,0.778,43,1.544,83,0.379,86,1.181,91,1.026,93,1.931,94,2.282,95,1.494,96,1.127,100,1.727,104,0.583,113,2.062,115,2.465,116,1.931,117,0.413,118,2.988,119,1.813,120,2.062,125,2.062,197,3.503,198,4.104,199,4.104,200,2.687,201,1.706,202,3.503,203,3.503,204,3.503]],["title/classes/CategoryPrismaRepository.html",[13,0.011,205,2.715]],["body/classes/CategoryPrismaRepository.html",[3,0.166,4,0.149,5,0.149,7,0.431,8,0.022,12,0.166,13,0.007,14,1.132,16,0.011,17,0.011,37,0.865,40,0.944,42,1.758,43,1.533,44,1.251,46,1.458,83,0.222,86,1.088,87,1,91,0.601,95,1.023,96,0.772,100,1.172,104,0.624,115,1.549,128,1.132,129,1.082,130,2.729,132,2.061,133,1.64,134,2.333,135,3.003,137,1.618,138,1.618,139,1.618,140,1.618,141,1.618,142,1.618,143,1.618,144,1.618,145,0.89,146,1.132,147,2.061,148,1.509,149,3.162,150,1.209,151,1.209,154,2.198,155,1.063,156,2.333,157,1.209,158,1.063,159,1.063,160,1.209,161,1.973,162,1.063,163,2.337,164,1.209,165,1.063,166,1.209,167,1.132,168,1.354,169,1.209,170,1.063,171,1.209,172,1.063,173,2.061,174,1.209,175,1.063,176,1.209,177,0.672,178,1.209,179,0.568,180,1.209,181,1.209,182,1.209,183,1.209,185,1.209,187,1.063,189,1.209,190,1.394,205,2.773,206,3.785,207,3.038,208,3.126,209,3.126,210,2.053,211,2.773,212,2.053,213,2.406,214,2.406,215,2.406]],["title/interfaces/CategoryRepository.html",[117,0.361,207,2.456]],["body/interfaces/CategoryRepository.html",[3,0.32,4,0.286,5,0.286,7,0.443,8,0.021,12,0.32,16,0.017,17,0.017,37,1.364,40,0.674,42,1.293,43,1.364,44,0.92,46,1.094,83,0.428,86,1.109,104,0.609,115,1.617,117,0.466,129,1.705,154,2.016,177,1.293,179,1.487,193,1.712,196,2.178,207,4.309,208,4.927,209,4.927,216,3.951,217,4.629]],["title/classes/Favorite.html",[13,0.011,218,1.802]],["body/classes/Favorite.html",[3,0.245,4,0.219,5,0.219,7,0.424,8,0.022,12,0.245,13,0.01,16,0.014,17,0.014,40,0.864,83,0.327,86,1.197,91,0.885,93,1.667,94,2.173,95,1.354,96,1.021,97,3.441,100,1.738,104,0.608,105,3.201,113,1.78,115,1.237,116,1.667,117,0.356,118,3.227,119,2.441,120,2.776,121,2.052,122,2.052,125,1.78,201,2.586,218,3.364,219,3.023,220,4.496,221,3.198,222,3.542,223,3.542,224,3.542,225,3.542,226,2.681,227,2.435,228,4.068,229,3.023,230,4.846]],["title/classes/FavoritePrismaRepository.html",[13,0.011,231,2.715]],["body/classes/FavoritePrismaRepository.html",[3,0.166,4,0.149,5,0.149,7,0.431,8,0.022,12,0.166,13,0.007,14,1.132,16,0.011,17,0.011,37,0.865,40,0.944,42,1.758,43,1.487,44,1.251,46,1.458,83,0.222,86,1.088,87,1,91,0.601,95,1.023,96,0.772,100,1.172,104,0.624,128,1.132,129,1.082,130,2.729,132,2.061,133,1.64,134,2.333,135,3.003,137,1.618,138,1.618,139,1.618,140,1.618,141,1.618,142,1.618,143,1.618,144,1.618,145,0.89,146,1.132,147,2.061,148,1.509,149,3.162,150,1.209,151,1.209,154,2.198,155,1.063,156,2.333,157,1.209,158,1.063,159,1.063,160,1.209,161,1.973,162,1.063,163,2.337,164,1.209,165,1.063,166,1.209,167,1.132,168,1.354,169,1.209,170,1.063,171,1.209,172,1.063,173,2.061,174,1.209,175,1.063,176,1.209,177,0.672,178,1.209,179,0.568,180,1.209,181,1.209,182,1.209,183,1.209,185,1.209,187,1.063,189,1.209,190,1.394,218,2.229,221,1.972,231,2.773,232,3.785,233,3.038,234,2.509,235,2.509,236,2.406,237,2.773,238,2.053,239,2.406,240,2.406,241,2.406]],["title/interfaces/FavoriteRepository.html",[117,0.361,233,2.456]],["body/interfaces/FavoriteRepository.html",[3,0.32,4,0.286,5,0.286,7,0.443,8,0.021,12,0.32,16,0.017,17,0.017,37,1.364,40,0.674,42,1.293,43,1.094,44,0.92,46,1.094,83,0.428,86,1.109,104,0.609,117,0.466,129,1.705,154,2.016,177,1.293,179,1.487,193,1.712,196,2.178,218,2.326,221,2.492,233,4.309,234,3.954,235,3.954,242,3.951,243,4.629]],["title/controllers/HealthController.html",[0,2.25,244,2.456]],["body/controllers/HealthController.html",[0,2.772,2,2.56,3,0.306,4,0.273,5,0.273,7,0.43,8,0.022,9,2.22,12,0.306,13,0.013,15,4.786,16,0.016,17,0.016,37,1.325,40,0.643,46,1.044,83,0.409,87,1.837,132,2.331,145,1.634,180,2.22,181,2.22,182,2.22,244,3.84,245,3.772,246,4.419,247,5.607,248,6.478,249,4.419,250,4.419,251,4.419,252,5.607,253,5.607,254,5.607,255,3.345,256,4.419,257,4.419,258,4.419,259,4.419,260,4.419]],["title/modules/HealthModule.html",[18,1.931,30,2.25]],["body/modules/HealthModule.html",[2,3.391,3,0.327,4,0.293,5,0.293,7,0.509,8,0.022,9,2.378,12,0.327,13,0.014,16,0.017,17,0.017,18,3.151,20,2.742,30,3.672,36,3.582,244,4.352,255,3.582,261,4.732,262,4.732,263,5.853,264,4.039,265,4.732,266,4.732,267,4.732,268,4.732,269,4.732,270,4.732]],["title/interfaces/Mapper.html",[117,0.361,133,1.326]],["body/interfaces/Mapper.html",[3,0.273,4,0.244,5,0.244,7,0.303,8,0.021,12,0.273,16,0.015,17,0.015,37,1.232,40,0.904,42,1.735,43,1.467,44,1.234,46,1.467,83,0.365,94,1.38,104,0.613,116,1.859,117,0.398,133,2.159,161,1.928,173,2.914,193,1.461,271,3.372,272,6.209,273,6.209,274,6.209,275,4.886,276,3.951,277,5.509,278,3.951,279,6.209,280,3.951,281,4.451,282,3.951]],["title/interfaces/Model.html",[94,1.252,117,0.361]],["body/interfaces/Model.html",[3,0.354,4,0.316,5,0.316,8,0.021,12,0.354,16,0.018,17,0.018,83,0.473,86,1.159,94,2.296,96,1.293,100,1.802,104,0.567,117,0.515,193,1.891,283,4.365]],["title/classes/Pageable.html",[13,0.011,284,1.687]],["body/classes/Pageable.html",[3,0.169,4,0.151,5,0.151,7,0.188,8,0.022,12,0.257,13,0.007,16,0.011,17,0.011,37,0.877,40,0.948,42,1.252,43,0.877,44,0.738,46,0.578,78,3.393,83,0.226,87,1.018,91,0.612,96,0.782,104,0.615,117,0.246,123,3.165,145,1.372,168,1.372,189,2.843,284,2.354,285,1.853,286,4.584,287,5.017,288,5.017,289,4.723,290,5.168,291,4.785,292,3.818,293,4.584,294,5.168,295,3.07,296,2.448,297,3.711,298,3.426,299,2.448,300,4.829,301,2.448,302,2.448,303,2.448,304,2.448,305,2.448,306,2.448,307,2.448,308,2.448,309,2.448,310,2.448,311,2.15,312,4.283,313,4.693,314,2.089,315,2.089,316,2.089,317,2.089,318,2.089,319,2.089,320,2.089,321,1.853,322,2.089,323,2.089,324,2.089,325,2.089,326,3.393,327,1.853,328,2.089,329,2.089,330,2.089,331,2.089,332,1.676,333,2.089]],["title/interfaces/PageableRequest.html",[117,0.361,311,2.078]],["body/interfaces/PageableRequest.html",[3,0.2,4,0.179,5,0.179,7,0.222,8,0.022,12,0.291,13,0.009,16,0.012,17,0.012,78,3.746,83,0.268,87,1.204,96,0.886,104,0.457,117,0.291,123,3.105,145,1.07,189,3.023,193,1.07,284,1.978,285,2.191,286,4.554,287,4.922,288,4.922,289,4.762,290,5.135,291,5.049,292,4.004,293,4.554,294,5.135,295,1.983,298,2.879,300,4.224,311,2.867,312,4.907,313,4.907,314,2.471,315,2.471,316,2.471,317,2.471,318,2.471,319,2.471,320,2.471,321,2.191,322,2.471,323,2.471,324,2.471,325,2.471,326,3.746,327,2.191,328,2.471,329,2.471,330,2.471,331,2.471,332,1.983,333,2.471]],["title/classes/PrismaRepository.html",[13,0.011,130,1.491]],["body/classes/PrismaRepository.html",[3,0.136,4,0.121,5,0.121,7,0.372,8,0.022,12,0.136,13,0.006,16,0.009,17,0.009,37,0.738,40,0.883,42,1.619,43,1.369,44,1.152,46,1.328,83,0.181,86,1.022,87,2.252,91,0.49,94,0.684,95,0.872,96,0.658,100,1.364,104,0.594,128,0.922,130,1.298,132,2.146,133,2.196,134,2.28,135,2.976,137,1.379,138,1.379,139,1.379,140,1.379,141,1.719,142,1.379,143,1.379,144,1.379,145,0.725,146,1.469,148,1.958,154,2.266,155,1.379,156,2.429,158,1.379,159,1.379,161,2.079,162,1.379,163,2.698,165,1.379,167,0.922,168,1.154,170,1.379,172,1.379,173,2.146,175,1.379,177,0.547,179,0.919,189,2.721,190,3.257,196,0.922,277,3.321,281,3.787,284,1.831,286,2.363,291,3.359,292,1.809,293,2.363,311,1.809,312,2.945,326,1.483,334,5.267,335,1.672,336,1.96,337,1.96,338,1.96,339,1.96,340,1.96,341,1.96,342,1.96,343,1.96,344,1.96,345,2.664,346,1.96,347,1.96,348,4.846,349,1.96,350,3.891,351,3.122,352,1.96,353,3.122,354,3.122,355,1.96,356,1.96,357,1.96,358,1.96,359,1.96,360,1.96,361,1.96,362,1.96,363,1.96,364,1.96,365,3.122,366,1.96,367,1.96,368,1.96]],["title/injectables/PrismaService.html",[80,2.25,147,1.491]],["body/injectables/PrismaService.html",[3,0.326,4,0.291,5,0.291,7,0.448,8,0.021,9,2.369,12,0.326,13,0.014,16,0.017,17,0.017,37,1.38,40,0.686,46,1.114,80,3.663,81,3.569,83,0.436,95,1.317,104,0.436,129,1.725,135,2.803,147,2.428,187,2.083,190,2.732,369,4.024,370,6.344,371,6.945,372,4.715,373,4.715]],["title/interfaces/Repository.html",[117,0.361,179,0.847]],["body/interfaces/Repository.html",[3,0.204,4,0.183,5,0.183,7,0.384,8,0.021,12,0.204,16,0.013,17,0.013,37,1.008,40,0.931,42,1.787,43,1.511,44,1.271,46,1.511,83,0.273,86,1.149,94,1.032,100,1.323,104,0.637,117,0.297,137,1.885,138,1.885,139,1.885,140,1.885,141,1.885,142,1.885,143,1.885,144,1.885,154,2.436,155,1.885,158,1.306,159,1.885,161,2.31,162,1.885,163,2.785,165,1.885,168,1.578,170,1.885,172,1.885,173,2.519,175,1.885,177,0.826,179,1.183,193,1.093,284,2.008,298,4.15,311,2.472,374,2.523,375,2.956,376,2.956,377,2.956,378,2.956,379,4.267,380,2.956,381,2.956,382,2.956,383,2.956,384,2.956,385,2.956,386,2.956]],["title/modules/RepositoryModule.html",[18,1.931,31,2.25]],["body/modules/RepositoryModule.html",[2,3,3,0.358,4,0.32,5,0.32,7,0.397,8,0.022,9,2.601,12,0.358,13,0.015,16,0.018,17,0.018,18,3.328,20,3,25,3.919,31,3.878,36,3.919,387,5.177]],["title/classes/Reservation.html",[13,0.011,388,1.687]],["body/classes/Reservation.html",[3,0.206,4,0.184,5,0.184,7,0.422,8,0.022,12,0.206,13,0.009,16,0.013,17,0.013,40,0.933,44,0.853,83,0.275,86,1.151,91,0.744,94,1.921,95,1.198,96,0.904,97,3.188,100,1.654,103,3.451,104,0.627,105,3.994,113,1.496,114,2.253,115,1.04,116,1.401,117,0.3,118,3.329,119,2.221,120,2.526,121,2.485,122,1.725,123,1.602,124,1.867,125,1.496,201,2.424,220,4.164,221,2.962,226,2.253,227,2.155,228,3.768,229,2.54,289,3.768,388,3.219,389,2.54,390,5.501,391,4.977,392,2.977,393,2.977,394,2.977,395,2.977,396,2.977,397,4.695,398,2.977,399,2.977,400,2.977,401,2.977,402,2.977]],["title/classes/ReservationPrismaRepository.html",[13,0.011,403,2.715]],["body/classes/ReservationPrismaRepository.html",[3,0.166,4,0.149,5,0.149,7,0.431,8,0.022,12,0.166,13,0.007,14,1.132,16,0.011,17,0.011,37,0.865,40,0.944,42,1.758,43,1.487,44,1.251,46,1.458,83,0.222,86,1.088,87,1,91,0.601,95,1.023,96,0.772,100,1.172,104,0.624,128,1.132,129,1.082,130,2.729,132,2.061,133,1.64,134,2.333,135,3.003,137,1.618,138,1.618,139,1.618,140,1.618,141,1.618,142,1.618,143,1.618,144,1.618,145,0.89,146,1.132,147,2.061,148,1.509,149,3.162,150,1.209,151,1.209,154,2.198,155,1.063,156,2.333,157,1.209,158,1.063,159,1.063,160,1.209,161,1.973,162,1.063,163,2.337,164,1.209,165,1.063,166,1.209,167,1.132,168,1.354,169,1.209,170,1.063,171,1.209,172,1.063,173,2.061,174,1.209,175,1.063,176,1.209,177,0.672,178,1.209,179,0.568,180,1.209,181,1.209,182,1.209,183,1.209,185,1.209,187,1.063,189,1.209,190,1.394,210,2.053,221,1.972,234,2.509,235,2.509,388,2.087,403,2.773,404,3.785,405,3.038,406,2.773,407,2.053,408,2.406,409,2.406,410,2.406]],["title/interfaces/ReservationRepository.html",[117,0.361,405,2.456]],["body/interfaces/ReservationRepository.html",[3,0.32,4,0.286,5,0.286,7,0.443,8,0.021,12,0.32,16,0.017,17,0.017,37,1.364,40,0.674,42,1.293,43,1.094,44,0.92,46,1.094,83,0.428,86,1.109,104,0.609,117,0.466,129,1.705,154,2.016,177,1.293,179,1.487,193,1.712,196,2.178,221,2.492,234,3.954,235,3.954,388,2.178,405,4.309,411,3.951,412,4.629]],["title/classes/Restaurant.html",[13,0.011,201,1.491]],["body/classes/Restaurant.html",[3,0.168,4,0.15,5,0.15,7,0.433,8,0.022,12,0.168,13,0.007,16,0.011,17,0.011,40,0.958,43,1.267,44,0.735,83,0.225,86,1.252,91,0.608,93,2.657,94,1.873,95,1.032,96,0.779,97,2.89,98,3.059,99,3.673,100,1.417,103,3.129,104,0.637,105,3.502,113,1.223,115,1.291,116,1.145,117,0.245,118,3.397,119,1.075,120,1.223,121,2.141,122,1.41,123,1.31,124,1.527,125,1.223,200,1.857,201,2.905,202,2.077,204,3.153,218,1.857,289,2.531,388,1.739,413,2.077,414,5.362,415,5.362,416,4.987,417,4.987,418,5.362,419,4.577,420,2.434,421,2.434,422,2.434,423,2.434,424,2.434,425,2.434,426,2.434,427,2.434,428,2.434,429,2.434,430,2.434,431,4.257,432,2.434,433,2.434,434,2.434,435,2.434,436,2.077,437,2.077,438,1.989,439,2.797,440,1.842,441,2.434,442,2.434,443,2.434,444,3.153,445,3.153,446,2.434,447,2.434]],["title/classes/RestaurantFeature.html",[13,0.011,200,1.802]],["body/classes/RestaurantFeature.html",[3,0.248,4,0.221,5,0.221,7,0.375,8,0.022,12,0.248,13,0.011,16,0.014,17,0.014,40,0.869,43,1.476,44,0.971,83,0.331,86,1.235,91,0.895,93,1.686,94,2.181,95,1.364,96,1.029,100,1.703,104,0.596,113,1.8,115,2.251,116,1.686,117,0.361,118,3.238,119,2.158,120,2.454,125,1.8,200,3.238,201,2.03,203,5.33,448,5.33,449,3.057,450,5.968,451,5.33,452,3.582,453,3.582,454,3.582,455,3.582,456,3.582,457,3.582]],["title/classes/RestaurantFeaturePrismaRepository.html",[13,0.011,458,2.715]],["body/classes/RestaurantFeaturePrismaRepository.html",[3,0.179,4,0.16,5,0.16,7,0.443,8,0.021,12,0.179,13,0.008,14,1.218,16,0.011,17,0.011,37,0.914,40,0.947,42,1.759,43,1.488,44,1.252,46,1.455,83,0.239,86,1.019,91,0.647,95,1.081,96,0.816,100,1.225,104,0.632,128,1.218,129,1.143,130,2.77,132,2.139,133,1.714,134,2.421,135,2.972,137,1.71,138,1.71,139,1.71,140,1.71,141,1.71,142,1.71,143,1.71,144,1.71,145,0.957,146,1.218,147,2.139,149,3.221,150,1.3,151,1.3,154,2.151,155,1.143,156,2.421,157,1.3,158,1.143,159,1.143,160,1.3,161,2.036,162,1.143,163,2.402,164,1.3,165,1.143,166,1.3,167,1.218,168,1.431,169,1.3,170,1.143,171,1.3,172,1.143,173,2.139,174,1.3,175,1.143,176,1.3,177,0.723,178,1.3,179,0.611,183,1.3,185,1.3,187,1.143,200,1.944,335,2.208,458,2.929,459,3.303,460,3.303,461,3.175,462,2.208,463,2.929,464,2.588]],["title/interfaces/RestaurantFeatureRepository.html",[117,0.361,461,2.456]],["body/interfaces/RestaurantFeatureRepository.html",[3,0.339,4,0.303,5,0.303,7,0.495,8,0.022,12,0.339,16,0.018,17,0.018,104,0.621,117,0.493,129,1.765,177,1.368,179,1.525,193,1.811,196,2.304,200,2.461,284,2.304,461,4.419,465,4.179,466,4.179,467,4.179]],["title/classes/RestaurantPrismaRepository.html",[13,0.011,468,2.715]],["body/classes/RestaurantPrismaRepository.html",[3,0.177,4,0.158,5,0.158,7,0.458,8,0.021,12,0.177,13,0.008,14,1.203,16,0.011,17,0.011,37,0.906,40,0.945,42,1.753,43,1.483,44,1.248,46,1.45,83,0.236,86,1.014,91,0.639,95,1.071,96,0.808,100,1.216,104,0.626,128,1.203,129,1.132,130,2.764,132,2.126,133,1.702,134,2.406,135,2.965,137,1.694,138,1.694,139,1.694,140,1.694,141,1.694,142,1.694,143,1.694,144,1.694,145,0.945,146,1.203,147,2.126,149,3.211,150,1.284,151,1.284,154,2.143,155,1.13,156,2.406,157,1.284,158,1.13,159,1.13,160,1.284,161,2.026,162,1.13,163,2.392,164,1.284,165,1.13,166,1.284,167,1.203,168,1.418,169,1.284,170,1.13,171,1.284,172,1.13,173,2.126,174,1.284,175,1.13,176,1.284,177,0.714,178,1.284,179,0.604,180,1.284,181,1.284,182,1.284,183,1.284,185,1.284,187,1.13,201,1.594,284,1.203,345,2.182,468,2.903,469,3.273,470,3.152,471,2.182,472,2.903,473,2.182,474,2.556]],["title/interfaces/RestaurantRepository.html",[117,0.361,470,2.456]],["body/interfaces/RestaurantRepository.html",[3,0.34,4,0.304,5,0.304,7,0.496,8,0.022,12,0.34,16,0.018,17,0.018,104,0.622,117,0.495,129,1.77,177,1.373,179,1.527,193,1.818,196,2.313,201,2.044,284,2.313,467,4.196,470,4.426,475,4.196]],["title/classes/RestaurateurPrismaRepository.html",[13,0.011,476,2.715]],["body/classes/RestaurateurPrismaRepository.html",[3,0.179,4,0.16,5,0.16,7,0.443,8,0.021,12,0.179,13,0.008,14,1.215,16,0.011,17,0.011,37,0.913,40,0.947,42,1.758,43,1.487,44,1.251,46,1.454,83,0.239,86,1.018,91,0.645,95,1.08,96,0.814,100,1.224,104,0.627,128,1.215,129,1.141,130,2.769,132,2.137,133,1.712,134,2.418,135,2.971,137,1.707,138,1.707,139,1.707,140,1.707,141,1.707,142,1.707,143,1.707,144,1.707,145,0.955,146,1.215,147,2.137,149,3.22,150,1.298,151,1.298,154,2.15,155,1.141,156,2.418,157,1.298,158,1.141,159,1.141,160,1.298,161,2.034,162,1.141,163,2.401,164,1.298,165,1.141,166,1.298,167,1.215,168,1.429,169,1.298,170,1.141,171,1.298,172,1.141,173,2.137,174,1.298,175,1.141,176,1.298,177,0.721,178,1.298,179,0.61,180,1.298,181,1.298,182,1.298,183,1.298,185,1.298,187,1.141,438,2.08,471,2.204,476,2.925,477,3.298,478,3.171,479,2.925,480,2.204,481,2.582]],["title/classes/RestaurateurProfile.html",[13,0.011,438,1.931]],["body/classes/RestaurateurProfile.html",[3,0.22,4,0.196,5,0.196,7,0.345,8,0.022,12,0.22,13,0.009,16,0.013,17,0.013,40,0.929,44,1.234,83,0.294,86,1.21,91,0.794,93,1.495,94,2.088,95,1.256,96,0.947,97,3.284,98,3.571,100,1.641,103,3.555,104,0.613,105,3.777,113,1.597,115,1.11,116,1.495,117,0.32,118,3.206,119,1.986,120,2.258,121,2.604,122,1.841,123,1.711,124,1.994,125,1.597,201,2.653,220,4.29,226,2.406,438,3.342,439,3.402,440,4.29,482,5.563,483,2.712,484,4.526,485,4.526,486,3.178,487,3.178,488,3.178,489,3.178,490,3.178,491,3.178,492,3.178]],["title/interfaces/RestaurateurRepository.html",[117,0.361,478,2.456]],["body/interfaces/RestaurateurRepository.html",[3,0.348,4,0.311,5,0.311,7,0.466,8,0.021,12,0.348,16,0.018,17,0.018,104,0.604,117,0.507,129,1.795,177,1.406,179,1.543,193,1.861,196,2.368,438,2.71,478,4.472,493,4.296]],["title/classes/Sort.html",[13,0.011,292,2.078]],["body/classes/Sort.html",[3,0.217,4,0.194,5,0.194,7,0.241,8,0.022,12,0.308,13,0.009,16,0.013,17,0.013,37,1.053,40,0.866,42,1.447,43,1.053,44,0.886,46,1.224,83,0.29,86,1.182,87,2.153,91,0.784,96,0.939,104,0.601,119,1.387,132,2.153,145,1.161,161,1.161,168,1.647,189,1.577,275,2.376,292,4,295,3.546,298,2.15,321,2.376,332,2.15,494,2.679,495,5.636,496,5.636,497,4.455,498,4.455,499,2.679,500,3.372,501,3.139,502,4.455,503,3.139,504,3.139,505,4.419,506,2.679,507,2.679,508,2.679,509,2.679,510,5.952,511,3.139,512,5.636,513,4.455,514,3.139,515,4.455,516,3.139,517,3.139,518,3.139,519,3.139,520,3.139,521,3.139,522,2.679]],["title/classes/UserPrismaRepository.html",[13,0.011,523,2.715]],["body/classes/UserPrismaRepository.html",[3,0.178,4,0.159,5,0.159,7,0.442,8,0.021,12,0.178,13,0.008,14,1.21,16,0.011,17,0.011,37,0.91,40,0.946,42,1.756,43,1.485,44,1.25,46,1.452,83,0.238,86,1.016,91,0.643,95,1.076,96,0.812,100,1.221,104,0.626,129,1.138,130,2.767,132,2.132,133,1.708,134,2.413,135,2.969,137,1.702,138,1.702,139,1.702,140,1.702,141,1.702,142,1.702,143,1.702,144,1.702,145,0.951,146,1.21,147,2.132,149,3.216,150,1.292,151,1.292,154,2.147,155,1.136,156,2.413,157,1.292,158,1.136,159,1.136,160,1.292,161,2.031,162,1.136,163,2.397,164,1.292,165,1.136,166,1.292,167,1.21,168,1.424,169,1.292,170,1.136,171,1.292,172,1.136,173,2.132,174,1.292,175,1.136,176,1.292,177,0.719,178,1.292,179,1.091,180,1.292,181,1.292,182,1.292,183,1.292,185,1.292,187,1.136,227,1.936,523,2.916,524,3.288,525,2.195,526,3.163,527,2.572,528,2.916,529,2.195,530,2.572]],["title/classes/UserProfile.html",[13,0.011,227,1.802]],["body/classes/UserProfile.html",[3,0.224,4,0.2,5,0.2,7,0.404,8,0.022,12,0.224,13,0.01,16,0.013,17,0.013,40,0.909,44,1.241,83,0.299,86,1.174,91,0.809,93,1.522,94,2.102,95,1.271,96,0.959,97,3.31,98,3.605,100,1.591,103,3.583,104,0.615,105,3.794,113,1.625,115,1.13,116,1.522,117,0.326,118,3.223,119,1.429,120,1.625,121,2.637,122,1.874,123,1.741,124,2.029,125,1.625,218,2.645,227,3.137,228,4.276,388,2.477,436,2.761,437,2.761,440,3.985,444,2.761,445,2.761,484,4.556,485,4.556,531,5.474,532,2.761,533,3.235,534,3.235,535,3.235,536,3.235,537,3.235,538,3.235]],["title/interfaces/UserRepository.html",[117,0.361,526,2.456]],["body/interfaces/UserRepository.html",[3,0.348,4,0.311,5,0.311,7,0.466,8,0.021,12,0.348,16,0.018,17,0.018,104,0.604,117,0.507,129,1.795,177,1.406,179,1.543,193,1.861,196,2.368,227,2.529,526,4.472,539,4.296]],["title/coverage.html",[540,3.699]],["body/coverage.html",[0,2.335,1,1.683,5,0.152,6,2.097,8,0.022,10,1.424,13,0.02,16,0.011,17,0.011,24,2.549,80,2.335,82,2.097,90,1.424,92,2.097,94,0.858,104,0.227,115,0.858,117,0.656,126,1.86,127,2.097,128,2.853,130,1.022,131,1.683,133,0.909,147,1.022,179,0.879,184,1.86,194,2.097,197,2.097,200,1.235,201,1.022,205,1.86,206,2.097,207,1.683,211,1.86,216,2.097,218,1.235,219,2.097,227,1.235,231,1.86,232,2.097,233,1.683,237,1.86,242,2.097,244,1.683,245,2.097,271,2.097,283,2.097,284,1.156,285,2.817,292,1.424,311,1.424,313,5.499,327,2.817,332,1.683,334,2.097,369,2.097,374,2.097,388,1.156,389,2.097,403,1.86,404,2.097,405,1.683,406,1.86,411,2.097,413,2.097,438,1.323,448,2.097,449,2.097,458,1.86,459,2.097,460,2.097,461,1.683,463,1.86,465,2.097,466,2.097,468,1.86,469,2.097,470,1.683,472,1.86,475,2.097,476,1.86,477,2.097,478,1.683,479,1.86,482,2.097,483,2.097,493,2.097,494,2.097,523,1.86,524,2.097,525,2.097,526,1.683,528,1.86,531,2.097,532,2.097,539,2.097,540,1.86,541,2.457,542,2.457,543,2.457,544,6.72,545,6.062,546,2.457,547,2.097,548,6.062,549,2.097,550,2.097,551,2.097,552,2.097,553,2.097,554,2.097,555,2.097,556,2.097,557,3.177,558,3.722,559,2.457,560,2.457,561,3.722,562,3.722,563,2.457,564,2.457,565,2.457,566,2.457,567,5.385,568,5.385,569,2.457,570,2.457,571,2.097,572,3.722,573,2.097,574,2.457,575,2.457]],["title/dependencies.html",[21,2.953,576,2.559]],["body/dependencies.html",[8,0.022,9,2.343,16,0.017,17,0.017,21,3.193,50,3.98,52,4.779,53,3.98,55,3.98,56,3.98,58,3.98,61,3.98,62,3.98,63,3.98,65,3.98,187,2.06,255,3.53,264,3.98,577,6.313,578,4.663,579,6.313,580,4.663,581,4.663,582,4.663,583,4.663,584,4.663,585,4.663,586,4.663,587,4.663,588,4.663,589,4.663,590,4.663,591,4.663,592,4.663]],["title/miscellaneous/enumerations.html",[593,1.506,594,3.679]],["body/miscellaneous/enumerations.html",[8,0.021,16,0.016,17,0.016,83,0.407,114,4.235,115,1.538,228,3.832,388,2.072,391,3.758,419,3.758,439,4.235,500,5.405,593,2.213,594,3.758,595,5.595,596,3.758,597,4.775,598,5.595,599,3.758,600,4.775,601,5.595,602,3.758,603,4.775,604,3.758,605,5.595,606,5.595,607,5.595,608,5.595,609,3.758,610,5.595,611,5.595,612,5.595,613,3.758,614,5.595]],["title/miscellaneous/functions.html",[593,1.506,615,3.679]],["body/miscellaneous/functions.html",[8,0.019,16,0.019,17,0.019,24,4.913,83,0.501,571,4.626,573,4.626,593,2.724,615,4.626,616,5.421,617,5.421]],["title/index.html",[83,0.277,618,2.998,619,2.998]],["body/index.html",[4,0.248,8,0.021,16,0.016,17,0.016,52,4.453,93,1.888,179,0.948,522,3.425,540,3.038,620,4.013,621,4.013,622,5.269,623,4.013,624,4.013,625,4.013,626,4.013,627,4.013,628,4.013,629,4.013,630,4.013,631,4.013,632,5.883,633,6.787,634,4.013,635,4.013,636,4.013,637,6.659,638,4.013,639,4.013,640,5.269,641,4.013,642,4.013,643,4.013,644,4.013,645,5.269,646,5.269,647,4.013,648,4.013,649,4.013,650,5.269,651,5.269,652,4.013,653,4.013,654,4.013,655,4.013,656,4.013,657,3.425,658,4.013,659,4.013,660,4.013,661,4.013,662,4.013,663,4.013,664,4.013,665,4.013,666,4.013,667,3.425,668,4.013,669,4.013,670,4.013,671,4.013,672,4.013,673,4.013,674,3.425]],["title/modules.html",[20,2.832]],["body/modules.html",[8,0.019,16,0.019,17,0.019,19,3.697,20,3.127,30,3.386,31,3.386,657,4.607,675,5.397,676,5.397,677,6.726,678,6.336,679,6.336]],["title/overview.html",[680,4.171]],["body/overview.html",[2,2.763,8,0.02,10,3.695,16,0.017,17,0.017,18,2.567,19,4.882,20,2.763,21,3.266,22,4.069,23,4.069,24,3.266,25,3.609,26,4.069,27,4.069,28,4.069,29,4.069,30,4,31,4,32,5.019,33,4.069,34,4.069,81,3.609,91,1.192,193,1.763,557,4.069,680,4.069,681,4.768,682,5.881,683,4.768]],["title/properties.html",[96,0.909,576,2.559]],["body/properties.html",[8,0.021,16,0.019,17,0.019,93,2.573,96,1.152,667,4.666,674,4.666,684,5.467,685,5.467,686,5.467]],["title/miscellaneous/typealiases.html",[593,1.506,687,4.311]],["body/miscellaneous/typealiases.html",[8,0.022,16,0.016,17,0.016,83,0.382,86,1.114,102,4.583,104,0.584,119,1.825,161,1.527,163,2.626,168,1.527,275,3.127,397,4.583,431,4.583,505,5.092,506,3.526,507,3.526,508,3.526,509,4.583,593,2.076,596,3.526,597,4.583,599,3.526,600,4.583,602,3.526,603,4.583,604,3.526,609,3.526,613,3.526,688,4.131,689,5.37,690,5.37,691,5.37,692,6.317,693,4.131,694,4.131,695,4.131,696,5.966,697,5.966]],["title/miscellaneous/variables.html",[593,1.506,698,3.679]],["body/miscellaneous/variables.html",[8,0.022,13,0.018,16,0.011,17,0.011,83,0.233,87,2.829,90,2.945,104,0.565,115,1.775,133,2.261,184,2.877,186,3.243,200,2.554,201,2.113,211,2.877,212,3.243,218,2.554,221,1.36,227,2.554,237,2.877,238,3.243,295,4.66,388,2.391,406,2.877,407,3.243,438,2.736,451,2.156,462,3.243,463,2.877,472,2.877,473,3.243,479,2.877,480,3.243,484,2.877,485,2.877,499,5.218,500,4.628,528,2.877,529,3.243,547,2.156,549,2.156,550,2.156,551,2.156,552,2.156,553,3.243,554,2.156,555,2.156,556,2.156,593,1.269,698,2.156,699,2.526,700,2.526,701,2.526,702,2.526,703,2.526,704,2.526,705,2.526,706,2.526,707,2.526,708,2.526,709,2.526,710,2.526,711,2.526,712,2.526,713,2.526,714,2.526,715,2.526,716,2.526,717,2.526,718,2.526,719,2.526,720,2.526,721,2.526,722,2.526,723,2.526,724,2.526,725,2.526,726,2.526,727,2.526,728,2.526]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":313,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"coverage.html":{}}}],["0.0.1",{"_index":685,"title":{},"body":{"properties.html":{}}}],["0.1.14",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":330,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["1/14",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["10.3.3",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":270,"title":{},"body":{"modules/HealthModule.html":{}}}],["12",{"_index":557,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":683,"title":{},"body":{"overview.html":{}}}],["2",{"_index":682,"title":{},"body":{"overview.html":{}}}],["20",{"_index":327,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"coverage.html":{}}}],["3",{"_index":681,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["5.10.2",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["7.3.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["abcdef123456",{"_index":120,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["abstract",{"_index":125,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["accepted",{"_index":611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["address",{"_index":414,"title":{},"body":{"classes/Restaurant.html":{}}}],["admin",{"_index":614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":688,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":658,"title":{},"body":{"index.html":{}}}],["app",{"_index":635,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":628,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":381,"title":{},"body":{"interfaces/Repository.html":{}}}],["array",{"_index":351,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["asc",{"_index":510,"title":{},"body":{"classes/Sort.html":{}}}],["async",{"_index":135,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["auth",{"_index":90,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmapper",{"_index":184,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmapper.toentity(auth",{"_index":192,"title":{},"body":{"classes/AuthPrismaRepository.html":{}}}],["author",{"_index":667,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authprismarepository",{"_index":126,"title":{"classes/AuthPrismaRepository.html":{}},"body":{"classes/AuthPrismaRepository.html":{},"coverage.html":{}}}],["authrepository",{"_index":131,"title":{"interfaces/AuthRepository.html":{}},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"coverage.html":{}}}],["available",{"_index":679,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":484,"title":{},"body":{"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":190,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"classes/ReservationPrismaRepository.html":{}}}],["backers",{"_index":659,"title":{},"body":{"index.html":{}}}],["banner",{"_index":485,"title":{},"body":{"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":697,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["base.model",{"_index":113,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["base.prisma",{"_index":178,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["base.repository",{"_index":196,"title":{},"body":{"interfaces/AuthRepository.html":{},"interfaces/CategoryRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"interfaces/RestaurantRepository.html":{},"interfaces/RestaurateurRepository.html":{},"interfaces/UserRepository.html":{}}}],["biome",{"_index":180,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["boolean",{"_index":300,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":677,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":675,"title":{},"body":{"modules.html":{}}}],["building",{"_index":623,"title":{},"body":{"index.html":{}}}],["category",{"_index":115,"title":{"classes/Category.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["category.enum",{"_index":435,"title":{},"body":{"classes/Restaurant.html":{}}}],["category.enum.ts",{"_index":597,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["category.model",{"_index":456,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["categoryid",{"_index":450,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["categorymapper",{"_index":211,"title":{},"body":{"classes/CategoryPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymapper.toentity(category",{"_index":215,"title":{},"body":{"classes/CategoryPrismaRepository.html":{}}}],["categoryprismarepository",{"_index":205,"title":{"classes/CategoryPrismaRepository.html":{}},"body":{"classes/CategoryPrismaRepository.html":{},"coverage.html":{}}}],["categoryrepository",{"_index":207,"title":{"interfaces/CategoryRepository.html":{}},"body":{"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"coverage.html":{}}}],["check",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["city",{"_index":415,"title":{},"body":{"classes/Restaurant.html":{}}}],["class",{"_index":13,"title":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":443,"title":{},"body":{"classes/Restaurant.html":{}}}],["code_postal",{"_index":416,"title":{},"body":{"classes/Restaurant.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":189,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Sort.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{}}}],["constructor(prisma",{"_index":146,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["constructor(sort",{"_index":497,"title":{},"body":{"classes/Sort.html":{}}}],["constructor(undefined",{"_index":296,"title":{},"body":{"classes/Pageable.html":{}}}],["consumer",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(cookieparsermiddleware).forroutes",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(errorhandlermiddleware).forroutes",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(helmetmiddleware).forroutes",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":286,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{}}}],["content.length",{"_index":331,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["content.map(this.$mapper.toentity",{"_index":363,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('health",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"modules/RepositoryModule.html":{},"overview.html":{}}}],["cookieparsermiddleware",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["cookieparsermiddleware.configure(\"mysecret",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["copy.ts",{"_index":525,"title":{},"body":{"classes/UserPrismaRepository.html":{},"coverage.html":{}}}],["copy.ts:11",{"_index":527,"title":{},"body":{"classes/UserPrismaRepository.html":{}}}],["coverage",{"_index":540,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":97,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["createmany",{"_index":137,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["createmany(entities",{"_index":155,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["createone",{"_index":138,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["createone(entity",{"_index":159,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["creation",{"_index":122,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["d",{"_index":277,"title":{},"body":{"interfaces/Mapper.html":{},"classes/PrismaRepository.html":{}}}],["data",{"_index":281,"title":{},"body":{"interfaces/Mapper.html":{},"classes/PrismaRepository.html":{}}}],["data/repository/repository.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["database",{"_index":508,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/typealiases.html":{}}}],["date",{"_index":105,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["default",{"_index":499,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{}}}],["deletedat",{"_index":98,"title":{},"body":{"classes/Auth.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["deletemany",{"_index":139,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["deletemany(filter",{"_index":162,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["deleteone",{"_index":140,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["deleteone(id",{"_index":165,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":512,"title":{},"body":{"classes/Sort.html":{}}}],["description",{"_index":93,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":636,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["e",{"_index":275,"title":{},"body":{"interfaces/Mapper.html":{},"classes/Sort.html":{},"miscellaneous/typealiases.html":{}}}],["e2e",{"_index":647,"title":{},"body":{"index.html":{}}}],["eco",{"_index":605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["efficient",{"_index":624,"title":{},"body":{"index.html":{}}}],["eg",{"_index":119,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":99,"title":{},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Restaurant.html":{}}}],["empty",{"_index":287,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["entities",{"_index":158,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["entity",{"_index":161,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/Mapper.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"miscellaneous/typealiases.html":{}}}],["enum",{"_index":114,"title":{},"body":{"classes/Auth.html":{},"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["enum.ts",{"_index":603,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["enum/price",{"_index":434,"title":{},"body":{"classes/Restaurant.html":{}}}],["enumerations",{"_index":594,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["errorhandlermiddleware",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["errorhandlermiddleware.configure",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["errorlogstyle",{"_index":267,"title":{},"body":{"modules/HealthModule.html":{}}}],["example",{"_index":632,"title":{},"body":{"index.html":{}}}],["expensive",{"_index":607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":129,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"injectables/PrismaService.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"interfaces/RestaurateurRepository.html":{},"classes/UserPrismaRepository.html":{},"interfaces/UserRepository.html":{}}}],["false",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["favorite",{"_index":218,"title":{"classes/Favorite.html":{}},"body":{"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/Restaurant.html":{},"classes/UserProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favorite.model",{"_index":436,"title":{},"body":{"classes/Restaurant.html":{},"classes/UserProfile.html":{}}}],["favorited",{"_index":230,"title":{},"body":{"classes/Favorite.html":{}}}],["favoritemapper",{"_index":237,"title":{},"body":{"classes/FavoritePrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["favoritemapper.toentity(favorite",{"_index":241,"title":{},"body":{"classes/FavoritePrismaRepository.html":{}}}],["favoriteprismarepository",{"_index":231,"title":{"classes/FavoritePrismaRepository.html":{}},"body":{"classes/FavoritePrismaRepository.html":{},"coverage.html":{}}}],["favoriterepository",{"_index":233,"title":{"interfaces/FavoriteRepository.html":{}},"body":{"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"coverage.html":{}}}],["favorites",{"_index":444,"title":{},"body":{"classes/Restaurant.html":{},"classes/UserProfile.html":{}}}],["feature",{"_index":203,"title":{},"body":{"classes/Category.html":{},"classes/RestaurantFeature.html":{}}}],["feature.mapper.ts",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["feature.model",{"_index":202,"title":{},"body":{"classes/Category.html":{},"classes/Restaurant.html":{}}}],["feature.model.ts",{"_index":449,"title":{},"body":{"classes/RestaurantFeature.html":{},"coverage.html":{}}}],["feature.model.ts:16",{"_index":454,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:17",{"_index":455,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:18",{"_index":453,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:19",{"_index":452,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.prisma",{"_index":460,"title":{},"body":{"classes/RestaurantFeaturePrismaRepository.html":{},"coverage.html":{}}}],["feature.repository.ts",{"_index":466,"title":{},"body":{"interfaces/RestaurantFeatureRepository.html":{},"coverage.html":{}}}],["features",{"_index":204,"title":{},"body":{"classes/Category.html":{},"classes/Restaurant.html":{}}}],["fetching",{"_index":507,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":514,"title":{},"body":{"classes/Sort.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{}}}],["filter",{"_index":163,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":690,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["findbyemail",{"_index":136,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{}}}],["findbyemail(email",{"_index":152,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{}}}],["findbyname",{"_index":208,"title":{},"body":{"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{}}}],["findbyname(name",{"_index":209,"title":{},"body":{"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{}}}],["findbyuserid",{"_index":234,"title":{},"body":{"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{}}}],["findbyuserid(userid",{"_index":235,"title":{},"body":{"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{}}}],["findmany",{"_index":141,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["findmany(args",{"_index":379,"title":{},"body":{"interfaces/Repository.html":{}}}],["findmany(undefined",{"_index":167,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["findone",{"_index":142,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["findone(id",{"_index":170,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["first",{"_index":288,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["foo",{"_index":696,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["foo.bar",{"_index":509,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/typealiases.html":{}}}],["framework",{"_index":622,"title":{},"body":{"index.html":{}}}],["function",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":615,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuzz",{"_index":694,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["get()@healthcheck",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["getsort",{"_index":495,"title":{},"body":{"classes/Sort.html":{}}}],["getting",{"_index":618,"title":{"index.html":{}},"body":{}}],["gracefulshutdowntimeoutms",{"_index":269,"title":{},"body":{"modules/HealthModule.html":{}}}],["graph",{"_index":678,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":654,"title":{},"body":{"index.html":{}}}],["health",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":265,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":244,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":30,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["helmetmiddleware",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["helmetmiddleware.configure",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":664,"title":{},"body":{"index.html":{}}}],["http",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":263,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://google.com",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":671,"title":{},"body":{"index.html":{}}}],["icon",{"_index":451,"title":{},"body":{"classes/RestaurantFeature.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":100,"title":{},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/Model.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{}}}],["id,asc",{"_index":314,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["identifier",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":181,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["implements",{"_index":95,"title":{},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{}}}],["import(\"@nestjs/common\").middlewareconsumer",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/RepositoryModule.html":{}}}],["index",{"_index":83,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{}}}],["inherited",{"_index":149,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["injectable",{"_index":80,"title":{"injectables/AppService.html":{},"injectables/PrismaService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"overview.html":{}}}],["installation",{"_index":631,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":634,"title":{},"body":{"index.html":{}}}],["interface",{"_index":117,"title":{"interfaces/AuthRepository.html":{},"interfaces/CategoryRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"interfaces/PageableRequest.html":{},"interfaces/Repository.html":{},"interfaces/ReservationRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"interfaces/RestaurantRepository.html":{},"interfaces/RestaurateurRepository.html":{},"interfaces/UserRepository.html":{}},"body":{"classes/Auth.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"interfaces/RestaurantFeatureRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{}}}],["interfaces",{"_index":193,"title":{},"body":{"interfaces/AuthRepository.html":{},"interfaces/CategoryRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"interfaces/PageableRequest.html":{},"interfaces/Repository.html":{},"interfaces/ReservationRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"interfaces/RestaurantRepository.html":{},"interfaces/RestaurateurRepository.html":{},"interfaces/UserRepository.html":{},"overview.html":{}}}],["join",{"_index":522,"title":{},"body":{"classes/Sort.html":{},"index.html":{}}}],["kamil",{"_index":668,"title":{},"body":{"index.html":{}}}],["key",{"_index":513,"title":{},"body":{"classes/Sort.html":{}}}],["key},${value",{"_index":521,"title":{},"body":{"classes/Sort.html":{}}}],["last",{"_index":123,"title":{},"body":{"classes/Auth.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":674,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":651,"title":{},"body":{"index.html":{}}}],["limiter",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lint/style/useimporttype",{"_index":182,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["literal",{"_index":168,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"miscellaneous/typealiases.html":{}}}],["log",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["m",{"_index":156,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["made",{"_index":402,"title":{},"body":{"classes/Reservation.html":{}}}],["map(([key",{"_index":520,"title":{},"body":{"classes/Sort.html":{}}}],["mapper",{"_index":133,"title":{"interfaces/Mapper.html":{}},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/Mapper.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalelements",{"_index":329,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["metadata",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{}}}],["middlewares/cookie",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["middlewares/errorhandler",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["middlewares/helmet",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["miscellaneous",{"_index":593,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":650,"title":{},"body":{"index.html":{}}}],["mode",{"_index":640,"title":{},"body":{"index.html":{}}}],["model",{"_index":94,"title":{"interfaces/Model.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["models",{"_index":116,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"interfaces/Mapper.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["moderate",{"_index":606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/RepositoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/RepositoryModule.html":{},"overview.html":{}}}],["module/health/health.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":663,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":669,"title":{},"body":{"index.html":{}}}],["n_siret",{"_index":417,"title":{},"body":{"classes/Restaurant.html":{}}}],["name",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{}}}],["nb_people",{"_index":390,"title":{},"body":{"classes/Reservation.html":{}}}],["nest",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":673,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":264,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaService.html":{},"modules/RepositoryModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["new",{"_index":332,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["node.js",{"_index":621,"title":{},"body":{"index.html":{}}}],["npm",{"_index":633,"title":{},"body":{"index.html":{}}}],["number",{"_index":289,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{}}}],["numberofelements",{"_index":290,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["object.entries(this.sort",{"_index":519,"title":{},"body":{"classes/Sort.html":{}}}],["of(sort",{"_index":502,"title":{},"body":{"classes/Sort.html":{}}}],["of(undefined",{"_index":309,"title":{},"body":{"classes/Pageable.html":{}}}],["onmoduleinit",{"_index":371,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":652,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{}}}],["order",{"_index":515,"title":{},"body":{"classes/Sort.html":{}}}],["orderby",{"_index":358,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["out",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":680,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":511,"title":{},"body":{"classes/Sort.html":{}}}],["package",{"_index":576,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":312,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{}}}],["pageable",{"_index":284,"title":{"classes/Pageable.html":{}},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"coverage.html":{}}}],["pageable.of",{"_index":362,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["pageablerequest",{"_index":311,"title":{"interfaces/PageableRequest.html":{}},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"coverage.html":{}}}],["param",{"_index":118,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{}}}],["parser",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["partial",{"_index":173,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/Mapper.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["password",{"_index":101,"title":{},"body":{"classes/Auth.html":{}}}],["path",{"_index":505,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/typealiases.html":{}}}],["pathvalue",{"_index":692,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pending",{"_index":610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["people",{"_index":401,"title":{},"body":{"classes/Reservation.html":{}}}],["phone",{"_index":418,"title":{},"body":{"classes/Restaurant.html":{}}}],["please",{"_index":661,"title":{},"body":{"index.html":{}}}],["postal",{"_index":442,"title":{},"body":{"classes/Restaurant.html":{}}}],["prefix",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["pretty",{"_index":268,"title":{},"body":{"modules/HealthModule.html":{}}}],["price",{"_index":419,"title":{},"body":{"classes/Restaurant.html":{},"miscellaneous/enumerations.html":{}}}],["pricecategory",{"_index":431,"title":{},"body":{"classes/Restaurant.html":{},"miscellaneous/typealiases.html":{}}}],["pricecategoryenum",{"_index":595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prisma",{"_index":134,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prisma.service",{"_index":183,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prisma/client",{"_index":187,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"injectables/PrismaService.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{},"dependencies.html":{}}}],["prismaauth",{"_index":186,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismacategory",{"_index":212,"title":{},"body":{"classes/CategoryPrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":370,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismafavorite",{"_index":238,"title":{},"body":{"classes/FavoritePrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismarepository",{"_index":130,"title":{"classes/PrismaRepository.html":{}},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{},"coverage.html":{}}}],["prismarepository:10",{"_index":150,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:17",{"_index":160,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:22",{"_index":157,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:27",{"_index":171,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:31",{"_index":169,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:53",{"_index":176,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:61",{"_index":174,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:69",{"_index":166,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:73",{"_index":164,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismarepository:9",{"_index":151,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["prismareservation",{"_index":407,"title":{},"body":{"classes/ReservationPrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismarestaurant",{"_index":473,"title":{},"body":{"classes/RestaurantPrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismarestaurantfeature",{"_index":462,"title":{},"body":{"classes/RestaurantFeaturePrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismarestaurateurprofile",{"_index":480,"title":{},"body":{"classes/RestaurateurPrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":147,"title":{"injectables/PrismaService.html":{}},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"injectables/PrismaService.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{},"coverage.html":{}}}],["prismauserprofile",{"_index":529,"title":{},"body":{"classes/UserPrismaRepository.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":132,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{}}}],["production",{"_index":642,"title":{},"body":{"index.html":{}}}],["profile",{"_index":440,"title":{},"body":{"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["profile.model",{"_index":229,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{}}}],["profile.model.ts",{"_index":532,"title":{},"body":{"classes/UserProfile.html":{},"coverage.html":{}}}],["profile.model.ts:18",{"_index":537,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:19",{"_index":533,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:20",{"_index":534,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:21",{"_index":535,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:22",{"_index":538,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:23",{"_index":536,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.ts",{"_index":483,"title":{},"body":{"classes/RestaurateurProfile.html":{},"coverage.html":{}}}],["profile.ts:17",{"_index":490,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:18",{"_index":486,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:19",{"_index":487,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:20",{"_index":491,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:21",{"_index":488,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:22",{"_index":492,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:23",{"_index":489,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profiles",{"_index":446,"title":{},"body":{"classes/Restaurant.html":{}}}],["progressive",{"_index":620,"title":{},"body":{"index.html":{}}}],["project",{"_index":653,"title":{},"body":{"index.html":{}}}],["promise",{"_index":154,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["properties",{"_index":96,"title":{"properties.html":{}},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"properties.html":{}}}],["provide",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/RepositoryModule.html":{},"overview.html":{}}}],["r",{"_index":348,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["r.map((d",{"_index":353,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["rate",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ratelimiterguard",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["ratelimitermodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":662,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{}}}],["reflect",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["refused",{"_index":612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repository",{"_index":179,"title":{"interfaces/Repository.html":{}},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"interfaces/RestaurateurRepository.html":{},"classes/UserPrismaRepository.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["repository.ts",{"_index":128,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"coverage.html":{}}}],["repository.ts:10",{"_index":148,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{}}}],["repository.ts:11",{"_index":471,"title":{},"body":{"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{}}}],["repository.ts:14",{"_index":210,"title":{},"body":{"classes/CategoryPrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{}}}],["repository.ts:15",{"_index":236,"title":{},"body":{"classes/FavoritePrismaRepository.html":{}}}],["repository.ts:16",{"_index":153,"title":{},"body":{"classes/AuthPrismaRepository.html":{}}}],["repository.ts:17",{"_index":337,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:22",{"_index":336,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:27",{"_index":341,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:31",{"_index":340,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:53",{"_index":343,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:61",{"_index":342,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:69",{"_index":339,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:73",{"_index":338,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["repository.ts:9",{"_index":335,"title":{},"body":{"classes/PrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{}}}],["repositorymodule",{"_index":31,"title":{"modules/RepositoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepositoryModule.html":{},"modules.html":{},"overview.html":{}}}],["request",{"_index":326,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{}}}],["reservation",{"_index":388,"title":{"classes/Reservation.html":{}},"body":{"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/UserProfile.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reservation.model",{"_index":437,"title":{},"body":{"classes/Restaurant.html":{},"classes/UserProfile.html":{}}}],["reservation.userid",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reservationmapper",{"_index":406,"title":{},"body":{"classes/ReservationPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reservationmapper.toentity(reservation",{"_index":410,"title":{},"body":{"classes/ReservationPrismaRepository.html":{}}}],["reservationprismarepository",{"_index":403,"title":{"classes/ReservationPrismaRepository.html":{}},"body":{"classes/ReservationPrismaRepository.html":{},"coverage.html":{}}}],["reservationrepository",{"_index":405,"title":{"interfaces/ReservationRepository.html":{}},"body":{"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"coverage.html":{}}}],["reservations",{"_index":445,"title":{},"body":{"classes/Restaurant.html":{},"classes/UserProfile.html":{}}}],["reservationstatus",{"_index":397,"title":{},"body":{"classes/Reservation.html":{},"miscellaneous/typealiases.html":{}}}],["reservationstatusenum",{"_index":598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restaurant",{"_index":201,"title":{"classes/Restaurant.html":{}},"body":{"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurProfile.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurant.model",{"_index":226,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/RestaurateurProfile.html":{}}}],["restaurantfeature",{"_index":200,"title":{"classes/RestaurantFeature.html":{}},"body":{"classes/Category.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurantfeature.icon",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restaurantfeaturemapper",{"_index":463,"title":{},"body":{"classes/RestaurantFeaturePrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurantfeatureprismarepository",{"_index":458,"title":{"classes/RestaurantFeaturePrismaRepository.html":{}},"body":{"classes/RestaurantFeaturePrismaRepository.html":{},"coverage.html":{}}}],["restaurantfeaturerepository",{"_index":461,"title":{"interfaces/RestaurantFeatureRepository.html":{}},"body":{"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"coverage.html":{}}}],["restaurantid",{"_index":220,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/RestaurateurProfile.html":{}}}],["restaurantmapper",{"_index":472,"title":{},"body":{"classes/RestaurantPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurantprismarepository",{"_index":468,"title":{"classes/RestaurantPrismaRepository.html":{}},"body":{"classes/RestaurantPrismaRepository.html":{},"coverage.html":{}}}],["restaurantrepository",{"_index":470,"title":{"interfaces/RestaurantRepository.html":{}},"body":{"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"coverage.html":{}}}],["restaurants",{"_index":457,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["restaurateur",{"_index":439,"title":{},"body":{"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"miscellaneous/enumerations.html":{}}}],["restaurateurmapper",{"_index":479,"title":{},"body":{"classes/RestaurateurPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurateurprismarepository",{"_index":476,"title":{"classes/RestaurateurPrismaRepository.html":{}},"body":{"classes/RestaurateurPrismaRepository.html":{},"coverage.html":{}}}],["restaurateurprofile",{"_index":438,"title":{"classes/RestaurateurProfile.html":{}},"body":{"classes/Restaurant.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurateurprofile.avatar",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restaurateurprofile.banner",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restaurateurrepository",{"_index":478,"title":{"interfaces/RestaurateurRepository.html":{}},"body":{"classes/RestaurateurPrismaRepository.html":{},"interfaces/RestaurateurRepository.html":{},"coverage.html":{}}}],["restaurateurs",{"_index":447,"title":{},"body":{"classes/Restaurant.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"controllers/HealthController.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/Sort.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"interfaces/Mapper.html":{},"classes/Pageable.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{}}}],["role",{"_index":102,"title":{},"body":{"classes/Auth.html":{},"miscellaneous/typealiases.html":{}}}],["roleenum",{"_index":601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":637,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":625,"title":{},"body":{"index.html":{}}}],["server",{"_index":626,"title":{},"body":{"index.html":{}}}],["side",{"_index":627,"title":{},"body":{"index.html":{}}}],["siret",{"_index":441,"title":{},"body":{"classes/Restaurant.html":{}}}],["size",{"_index":291,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{}}}],["skip",{"_index":360,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["sort",{"_index":292,"title":{"classes/Sort.html":{}},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"classes/Sort.html":{},"coverage.html":{}}}],["sort(sort",{"_index":518,"title":{},"body":{"classes/Sort.html":{}}}],["sort.getsort",{"_index":359,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["sort.of(\"id,asc",{"_index":328,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["sort.of(sort",{"_index":322,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["sort.split",{"_index":516,"title":{},"body":{"classes/Sort.html":{}}}],["sort.tostring",{"_index":333,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"modules/RepositoryModule.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"index.html":{}}}],["sponsors",{"_index":656,"title":{},"body":{"index.html":{}}}],["src/.../auth.mapper.ts",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../category.mapper.ts",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../favorite.mapper.ts.ts",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter.ts",{"_index":689,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../path.ts",{"_index":691,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../price",{"_index":596,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../repl.ts",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reservation",{"_index":599,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../reservation.mapper.ts",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../restaurant",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../restaurant.mapper.ts",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../restaurateur.mapper.ts",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role",{"_index":602,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.mapper.ts",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:30",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["src/data/mapper/base.mapper",{"_index":344,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["src/data/mapper/base.mapper.ts",{"_index":271,"title":{},"body":{"interfaces/Mapper.html":{},"coverage.html":{}}}],["src/data/mapper/base.mapper.ts:4",{"_index":280,"title":{},"body":{"interfaces/Mapper.html":{}}}],["src/data/mapper/base.mapper.ts:5",{"_index":282,"title":{},"body":{"interfaces/Mapper.html":{}}}],["src/data/mapper/base.mapper.ts:6",{"_index":276,"title":{},"body":{"interfaces/Mapper.html":{}}}],["src/data/mapper/base.mapper.ts:7",{"_index":278,"title":{},"body":{"interfaces/Mapper.html":{}}}],["src/data/mapper/prisma",{"_index":185,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["src/data/mapper/prisma/auth.mapper.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/category.mapper.ts",{"_index":549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/favorite.mapper.ts.ts",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/reservation.mapper.ts",{"_index":551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/restaurant",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/restaurant.mapper.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/restaurateur.mapper.ts",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/mapper/prisma/user.mapper.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/models",{"_index":177,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"interfaces/RestaurateurRepository.html":{},"classes/UserPrismaRepository.html":{},"interfaces/UserRepository.html":{}}}],["src/data/models/auth.model.ts",{"_index":92,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/data/models/auth.model.ts:16",{"_index":109,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:17",{"_index":108,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:18",{"_index":110,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:19",{"_index":111,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:20",{"_index":106,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:21",{"_index":112,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:22",{"_index":107,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/base.model.ts",{"_index":283,"title":{},"body":{"interfaces/Model.html":{},"coverage.html":{}}}],["src/data/models/category.model.ts",{"_index":197,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/data/models/category.model.ts:13",{"_index":198,"title":{},"body":{"classes/Category.html":{}}}],["src/data/models/category.model.ts:14",{"_index":199,"title":{},"body":{"classes/Category.html":{}}}],["src/data/models/enum/price",{"_index":604,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/data/models/enum/reservation",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/data/models/enum/role",{"_index":613,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/data/models/favorite.model.ts",{"_index":219,"title":{},"body":{"classes/Favorite.html":{},"coverage.html":{}}}],["src/data/models/favorite.model.ts:17",{"_index":223,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:18",{"_index":225,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:19",{"_index":224,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:20",{"_index":222,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/reservation.model.ts",{"_index":389,"title":{},"body":{"classes/Reservation.html":{},"coverage.html":{}}}],["src/data/models/reservation.model.ts:20",{"_index":394,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:21",{"_index":393,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:22",{"_index":395,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:23",{"_index":398,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:24",{"_index":400,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:25",{"_index":396,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:26",{"_index":392,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:27",{"_index":399,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/restaurant",{"_index":448,"title":{},"body":{"classes/RestaurantFeature.html":{},"coverage.html":{}}}],["src/data/models/restaurant.model.ts",{"_index":413,"title":{},"body":{"classes/Restaurant.html":{},"coverage.html":{}}}],["src/data/models/restaurant.model.ts:30",{"_index":427,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:31",{"_index":429,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:32",{"_index":420,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:33",{"_index":425,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:34",{"_index":432,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:35",{"_index":428,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:36",{"_index":430,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:37",{"_index":422,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:38",{"_index":421,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:39",{"_index":426,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:40",{"_index":423,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:41",{"_index":433,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:42",{"_index":424,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurateur",{"_index":482,"title":{},"body":{"classes/RestaurateurProfile.html":{},"coverage.html":{}}}],["src/data/models/user",{"_index":531,"title":{},"body":{"classes/UserProfile.html":{},"coverage.html":{}}}],["src/data/repository/auth.repository.ts",{"_index":194,"title":{},"body":{"interfaces/AuthRepository.html":{},"coverage.html":{}}}],["src/data/repository/auth.repository.ts:5",{"_index":195,"title":{},"body":{"interfaces/AuthRepository.html":{}}}],["src/data/repository/base.repository.ts",{"_index":374,"title":{},"body":{"interfaces/Repository.html":{},"coverage.html":{}}}],["src/data/repository/base.repository.ts:13",{"_index":384,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:14",{"_index":383,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:15",{"_index":378,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:16",{"_index":377,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:6",{"_index":376,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:7",{"_index":375,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:8",{"_index":382,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/base.repository.ts:9",{"_index":380,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/repository/category.repository.ts",{"_index":216,"title":{},"body":{"interfaces/CategoryRepository.html":{},"coverage.html":{}}}],["src/data/repository/category.repository.ts:5",{"_index":217,"title":{},"body":{"interfaces/CategoryRepository.html":{}}}],["src/data/repository/favorite.repository.ts",{"_index":242,"title":{},"body":{"interfaces/FavoriteRepository.html":{},"coverage.html":{}}}],["src/data/repository/favorite.repository.ts:5",{"_index":243,"title":{},"body":{"interfaces/FavoriteRepository.html":{}}}],["src/data/repository/prisma/auth.prisma",{"_index":127,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/base.prisma",{"_index":334,"title":{},"body":{"classes/PrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/category.prisma",{"_index":206,"title":{},"body":{"classes/CategoryPrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/favorite.prisma",{"_index":232,"title":{},"body":{"classes/FavoritePrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/prisma.service.ts",{"_index":369,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/data/repository/prisma/prisma.service.ts:6",{"_index":372,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/data/repository/prisma/reservation.prisma",{"_index":404,"title":{},"body":{"classes/ReservationPrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/restaurant",{"_index":459,"title":{},"body":{"classes/RestaurantFeaturePrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/restaurant.prisma",{"_index":469,"title":{},"body":{"classes/RestaurantPrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/restaurateur.prisma",{"_index":477,"title":{},"body":{"classes/RestaurateurPrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/prisma/user.prisma",{"_index":524,"title":{},"body":{"classes/UserPrismaRepository.html":{},"coverage.html":{}}}],["src/data/repository/repository.module.ts",{"_index":387,"title":{},"body":{"modules/RepositoryModule.html":{}}}],["src/data/repository/reservation.repository.ts",{"_index":411,"title":{},"body":{"interfaces/ReservationRepository.html":{},"coverage.html":{}}}],["src/data/repository/reservation.repository.ts:5",{"_index":412,"title":{},"body":{"interfaces/ReservationRepository.html":{}}}],["src/data/repository/restaurant",{"_index":465,"title":{},"body":{"interfaces/RestaurantFeatureRepository.html":{},"coverage.html":{}}}],["src/data/repository/restaurant.repository.ts",{"_index":475,"title":{},"body":{"interfaces/RestaurantRepository.html":{},"coverage.html":{}}}],["src/data/repository/restaurateur.repository.ts",{"_index":493,"title":{},"body":{"interfaces/RestaurateurRepository.html":{},"coverage.html":{}}}],["src/data/repository/user.repository.ts",{"_index":539,"title":{},"body":{"interfaces/UserRepository.html":{},"coverage.html":{}}}],["src/data/util",{"_index":345,"title":{},"body":{"classes/PrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{}}}],["src/data/util/filter",{"_index":385,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/util/filter.ts",{"_index":693,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/data/util/pageable",{"_index":386,"title":{},"body":{"interfaces/Repository.html":{}}}],["src/data/util/pageable.ts",{"_index":285,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"coverage.html":{}}}],["src/data/util/pageable.ts:10",{"_index":299,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:11",{"_index":307,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:12",{"_index":308,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:13",{"_index":302,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:14",{"_index":305,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:15",{"_index":303,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:16",{"_index":306,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:17",{"_index":301,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:18",{"_index":304,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:19",{"_index":297,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/pageable.ts:45",{"_index":310,"title":{},"body":{"classes/Pageable.html":{}}}],["src/data/util/path.ts",{"_index":695,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/data/util/sort.ts",{"_index":494,"title":{},"body":{"classes/Sort.html":{},"coverage.html":{}}}],["src/data/util/sort.ts:14",{"_index":498,"title":{},"body":{"classes/Sort.html":{}}}],["src/data/util/sort.ts:21",{"_index":503,"title":{},"body":{"classes/Sort.html":{}}}],["src/data/util/sort.ts:25",{"_index":501,"title":{},"body":{"classes/Sort.html":{}}}],["src/data/util/sort.ts:29",{"_index":504,"title":{},"body":{"classes/Sort.html":{}}}],["src/main.ts",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/health/health.controller.ts",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/module/health/health.controller.ts:14",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/module/health/health.module.ts",{"_index":261,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/repl.ts",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":638,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":641,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":643,"title":{},"body":{"index.html":{}}}],["started",{"_index":619,"title":{"index.html":{}},"body":{}}],["starter",{"_index":630,"title":{},"body":{"index.html":{}}}],["statements",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":295,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/Sort.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":391,"title":{},"body":{"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["status.enum.ts",{"_index":600,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stay",{"_index":665,"title":{},"body":{"index.html":{}}}],["string",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Model.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["super(prisma.auth",{"_index":188,"title":{},"body":{"classes/AuthPrismaRepository.html":{}}}],["super(prisma.category",{"_index":213,"title":{},"body":{"classes/CategoryPrismaRepository.html":{}}}],["super(prisma.favorite",{"_index":239,"title":{},"body":{"classes/FavoritePrismaRepository.html":{}}}],["super(prisma.reservation",{"_index":408,"title":{},"body":{"classes/ReservationPrismaRepository.html":{}}}],["super(prisma.restaurant",{"_index":474,"title":{},"body":{"classes/RestaurantPrismaRepository.html":{}}}],["super(prisma.restaurantfeature",{"_index":464,"title":{},"body":{"classes/RestaurantFeaturePrismaRepository.html":{}}}],["super(prisma.restaurateurprofile",{"_index":481,"title":{},"body":{"classes/RestaurateurPrismaRepository.html":{}}}],["super(prisma.userprofile",{"_index":530,"title":{},"body":{"classes/UserPrismaRepository.html":{}}}],["support",{"_index":657,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":676,"title":{},"body":{"modules.html":{}}}],["t",{"_index":298,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/Repository.html":{},"classes/Sort.html":{}}}],["table",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":361,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["terminusmodule",{"_index":262,"title":{},"body":{"modules/HealthModule.html":{}}}],["terminusmodule.forroot",{"_index":266,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":646,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":649,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":648,"title":{},"body":{"index.html":{}}}],["tests",{"_index":645,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":655,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":373,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$mapper",{"_index":347,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$mapper.todata(entity",{"_index":365,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$mapper.toentity(d",{"_index":354,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$mapper.toentity(r",{"_index":350,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma",{"_index":346,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.auth.count",{"_index":356,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.auth.findmany",{"_index":357,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.create",{"_index":349,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.createmany",{"_index":352,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.delete",{"_index":367,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.deletemany",{"_index":368,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.findfirst",{"_index":355,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.update",{"_index":364,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.$prisma.updatemany",{"_index":366,"title":{},"body":{"classes/PrismaRepository.html":{}}}],["this.content",{"_index":315,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.empty",{"_index":325,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.first",{"_index":323,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.health.check",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('google",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.last",{"_index":318,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.number",{"_index":320,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.numberofelements",{"_index":324,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.prisma.auth.findfirst",{"_index":191,"title":{},"body":{"classes/AuthPrismaRepository.html":{}}}],["this.prisma.category.findfirst",{"_index":214,"title":{},"body":{"classes/CategoryPrismaRepository.html":{}}}],["this.prisma.favorite.findfirst",{"_index":240,"title":{},"body":{"classes/FavoritePrismaRepository.html":{}}}],["this.prisma.reservation.findfirst",{"_index":409,"title":{},"body":{"classes/ReservationPrismaRepository.html":{}}}],["this.size",{"_index":319,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.sort",{"_index":321,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/Sort.html":{}}}],["this.sort[field",{"_index":517,"title":{},"body":{"classes/Sort.html":{}}}],["this.totalelements",{"_index":316,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["this.totalpages",{"_index":317,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["timestamp",{"_index":121,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["todata",{"_index":272,"title":{},"body":{"interfaces/Mapper.html":{}}}],["todata(auth",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(category",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(entity",{"_index":274,"title":{},"body":{"interfaces/Mapper.html":{}}}],["todata(favorite",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(reservation",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(restaurant",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(restaurantfeature",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(restaurateurprofile",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todata(userprofile",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity",{"_index":273,"title":{},"body":{"interfaces/Mapper.html":{}}}],["toentity(auth",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(category",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(data",{"_index":279,"title":{},"body":{"interfaces/Mapper.html":{}}}],["toentity(favorite",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(reservation",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(restaurant",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(restaurantfeature",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(restaurateurprofile",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toentity(userprofile",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tostring",{"_index":496,"title":{},"body":{"classes/Sort.html":{}}}],["totalelements",{"_index":293,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{}}}],["totalpages",{"_index":294,"title":{},"body":{"classes/Pageable.html":{},"interfaces/PageableRequest.html":{}}}],["touch",{"_index":666,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":672,"title":{},"body":{"index.html":{}}}],["type",{"_index":104,"title":{},"body":{"classes/Auth.html":{},"classes/AuthPrismaRepository.html":{},"interfaces/AuthRepository.html":{},"classes/Category.html":{},"classes/CategoryPrismaRepository.html":{},"interfaces/CategoryRepository.html":{},"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"interfaces/Mapper.html":{},"interfaces/Model.html":{},"classes/Pageable.html":{},"interfaces/PageableRequest.html":{},"classes/PrismaRepository.html":{},"injectables/PrismaService.html":{},"interfaces/Repository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"interfaces/RestaurantFeatureRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"interfaces/RestaurantRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/RestaurateurProfile.html":{},"interfaces/RestaurateurRepository.html":{},"classes/Sort.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":687,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":629,"title":{},"body":{"index.html":{}}}],["unit",{"_index":644,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":686,"title":{},"body":{"properties.html":{}}}],["update",{"_index":124,"title":{},"body":{"classes/Auth.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["updatedat",{"_index":103,"title":{},"body":{"classes/Auth.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["updatemany",{"_index":143,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["updatemany(filter",{"_index":172,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["updateone",{"_index":144,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["updateone(id",{"_index":175,"title":{},"body":{"classes/AuthPrismaRepository.html":{},"classes/CategoryPrismaRepository.html":{},"classes/FavoritePrismaRepository.html":{},"classes/PrismaRepository.html":{},"interfaces/Repository.html":{},"classes/ReservationPrismaRepository.html":{},"classes/RestaurantFeaturePrismaRepository.html":{},"classes/RestaurantPrismaRepository.html":{},"classes/RestaurateurPrismaRepository.html":{},"classes/UserPrismaRepository.html":{}}}],["useclass",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":506,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":228,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/UserProfile.html":{},"miscellaneous/enumerations.html":{}}}],["userid",{"_index":221,"title":{},"body":{"classes/Favorite.html":{},"classes/FavoritePrismaRepository.html":{},"interfaces/FavoriteRepository.html":{},"classes/Reservation.html":{},"classes/ReservationPrismaRepository.html":{},"interfaces/ReservationRepository.html":{},"miscellaneous/variables.html":{}}}],["usermapper",{"_index":528,"title":{},"body":{"classes/UserPrismaRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprismarepository",{"_index":523,"title":{"classes/UserPrismaRepository.html":{}},"body":{"classes/UserPrismaRepository.html":{},"coverage.html":{}}}],["userprofile",{"_index":227,"title":{"classes/UserProfile.html":{}},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/UserPrismaRepository.html":{},"classes/UserProfile.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofile.avatar",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofile.banner",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":526,"title":{"interfaces/UserRepository.html":{}},"body":{"classes/UserPrismaRepository.html":{},"interfaces/UserRepository.html":{},"coverage.html":{}}}],["util",{"_index":467,"title":{},"body":{"interfaces/RestaurantFeatureRepository.html":{},"interfaces/RestaurantRepository.html":{}}}],["value",{"_index":500,"title":{},"body":{"classes/Sort.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":698,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":684,"title":{},"body":{"properties.html":{}}}],["very_expensive",{"_index":608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["watch",{"_index":639,"title":{},"body":{"index.html":{}}}],["website",{"_index":670,"title":{},"body":{"index.html":{}}}],["world",{"_index":89,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":660,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepositoryModule\n\nRepositoryModule\n\nAppModule -->\n\nRepositoryModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RepositoryModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { HelmetMiddleware } from \"@nest-middlewares/helmet\";\nimport { CookieParserMiddleware } from \"@nest-middlewares/cookie-parser\";\nimport { ErrorHandlerMiddleware } from \"@nest-middlewares/errorhandler\";\nimport { RateLimiterGuard, RateLimiterModule } from \"nestjs-rate-limiter\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { HealthModule } from \"./module/health/health.module\";\nimport { RepositoryModule } from './data/repository/repository.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    RateLimiterModule,\n    HealthModule,\n    RepositoryModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: RateLimiterGuard,\n    },\n  ],\n})\nexport class AppModule {\n  configure(consumer: import(\"@nestjs/common\").MiddlewareConsumer) {\n    HelmetMiddleware.configure({});\n    consumer.apply(HelmetMiddleware).forRoutes(\"*\");\n    CookieParserMiddleware.configure(\"MySecret\");\n    consumer.apply(CookieParserMiddleware).forRoutes(\"*\");\n    ErrorHandlerMiddleware.configure({\n      log: false,\n    });\n    consumer.apply(ErrorHandlerMiddleware).forRoutes(\"*\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/auth.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Auth\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { Role } from \"./enum\";\n\n/**\n * Model of the Auth\n * @category Models\n * @interface Auth\n * @param {string} id - id of the auth : eg. abcdef123456\n * @param {string} email - email of the auth\n * @param {string} password - password of the auth\n * @param {Date} createdAt - timestamp of the creation of the auth\n * @param {Date} updatedAt - timestamp of the last update of the auth\n * @param {Role} role - role of the auth\n */\nabstract class Auth implements Model {\n  id: string;\n  email: string;\n  password: string;\n  role: Role;\n  createdAt: Date;\n  updatedAt: Date;\n  deletedAt?: Date;\n\n}\n\nexport { Auth };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPrismaRepository.html":{"url":"classes/AuthPrismaRepository.html","title":"class - AuthPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/auth.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            AuthRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/auth.prisma-repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/auth.prisma-repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Auth } from \"src/data/models\";\nimport type { AuthRepository } from \"../\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport { AuthMapper } from \"src/data/mapper/prisma\";\nimport type { Auth as PrismaAuth } from '@prisma/client';\n\n\nexport class AuthPrismaRepository extends PrismaRepository implements AuthRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.auth, AuthMapper);\n  }\n\n\n  async findByEmail(email: string): Promise {\n    const auth = await this.prisma.auth.findFirst({ where: { email } });\n    return AuthMapper.toEntity(auth);\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthRepository.html":{"url":"interfaces/AuthRepository.html","title":"interface - AuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/auth.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findByEmail\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/auth.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Auth } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\n\ninterface AuthRepository extends Repository {\n  findByEmail(email: string): Promise;\n}\n\nexport type { AuthRepository };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/category.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Category\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/category.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/category.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { RestaurantFeature } from \"./restaurant-feature.model\";\n\n/**\n * Model of the Category\n * @category Models\n * @interface Category\n * @param {string} id - id of the category : eg. abcdef123456\n * @param {string} name - name of the category\n * @param {RestaurantFeature[]} feature - features in this category\n */\nabstract class Category implements Model {\n  id: string;\n  name: string;\n}\n\nexport { Category };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryPrismaRepository.html":{"url":"classes/CategoryPrismaRepository.html","title":"class - CategoryPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/category.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            CategoryRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/category.prisma-repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/category.prisma-repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Category } from \"src/data/models\";\nimport type { CategoryRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport { CategoryMapper } from \"src/data/mapper/prisma\";\nimport type { Category as PrismaCategory } from '@prisma/client';\n\n\nexport class CategoryPrismaRepository extends PrismaRepository implements CategoryRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.category, CategoryMapper);\n  }\n  async findByName(name: string): Promise {\n    const category = await this.prisma.category.findFirst({ where: { name } });\n    return CategoryMapper.toEntity(category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryRepository.html":{"url":"interfaces/CategoryRepository.html","title":"interface - CategoryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/category.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findByName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/category.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Category } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\n\ninterface CategoryRepository extends Repository {\n  findByName(name: string): Promise;\n}\n\nexport type { CategoryRepository };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Favorite.html":{"url":"classes/Favorite.html","title":"class - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/favorite.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Favorite\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                restaurantId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { Restaurant } from \"./restaurant.model\";\nimport type { UserProfile } from \"./user-profile.model\";\n\n/**\n * Model of the Favorite\n * @category Models\n * @interface Favorite\n * @param {string} id - id of the favorite : eg. abcdef123456\n * @param {UserProfile} user - user who favorited\n * @param {string} userId - id of the user : eg. abcdef123456\n * @param {Restaurant} restaurant - favorited restaurant\n * @param {string} restaurantId - id of the restaurant : eg. abcdef123456\n * @param {Date} createdAt - timestamp of the creation of the favorite\n */\nabstract class Favorite implements Model {\n  id: string;\n  userId: string;\n  restaurantId: string;\n  createdAt: Date;\n}\n\nexport { Favorite };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FavoritePrismaRepository.html":{"url":"classes/FavoritePrismaRepository.html","title":"class - FavoritePrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FavoritePrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/favorite.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            FavoriteRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUserId\n                            \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/favorite.prisma-repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/favorite.prisma-repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Favorite } from \"src/data/models\";\nimport type { FavoriteRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport { FavoriteMapper } from \"src/data/mapper/prisma\";\nimport type { Favorite as PrismaFavorite } from '@prisma/client';\n\n\nexport class FavoritePrismaRepository extends PrismaRepository implements FavoriteRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.favorite, FavoriteMapper);\n  }\n\n  async findByUserId(userId: string): Promise {\n    const favorite = await this.prisma.favorite.findFirst({ where: { userId } });\n    return FavoriteMapper.toEntity(favorite);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FavoriteRepository.html":{"url":"interfaces/FavoriteRepository.html","title":"interface - FavoriteRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FavoriteRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/favorite.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findByUserId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/favorite.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Favorite } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\n\ninterface FavoriteRepository extends Repository {\n  findByUserId(userId: string): Promise;\n}\n\nexport type { FavoriteRepository };\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/module/health/health.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n// biome-ignore lint/style/useImportType: \nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly http: HttpHealthIndicator,\n  ) { }\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('google', 'https://google.com'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [\n    TerminusModule.forRoot({\n      errorLogStyle: 'pretty',\n      gracefulShutdownTimeoutMs: 1000,\n    }),\n    HttpModule,\n  ],\n  controllers: [HealthController],\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mapper.html":{"url":"interfaces/Mapper.html","title":"interface - Mapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/mapper/base.mapper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        toData\n                                    \n                                \n                                \n                                    \n                                        toData\n                                    \n                                \n                                \n                                    \n                                        toEntity\n                                    \n                                \n                                \n                                    \n                                        toEntity\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData(entity: E)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/mapper/base.mapper.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        E\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     D\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData(entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/mapper/base.mapper.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toEntity\n                        \n                    \n                \n            \n            \n                \ntoEntity(data: D)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/mapper/base.mapper.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     E\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toEntity\n                        \n                    \n                \n            \n            \n                \ntoEntity(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/mapper/base.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Model } from \"../models\";\n\ninterface Mapper {\n  toEntity(data: D): E;\n  toEntity(data: Partial): Partial;\n  toData(entity: E): D;\n  toData(entity: Partial): Partial;\n}\n\nexport type { Mapper };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/base.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Model {\n  id: string;\n}\n\nexport type { Model };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pageable.html":{"url":"classes/Pageable.html","title":"class - Pageable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pageable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/util/pageable.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                empty\n                            \n                            \n                                first\n                            \n                            \n                                last\n                            \n                            \n                                number\n                            \n                            \n                                numberOfElements\n                            \n                            \n                                size\n                            \n                            \n                                sort\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined)\n                    \n                \n                        \n                            \n                                Defined in src/data/util/pageable.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        first\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        last\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sort\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/util/pageable.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        of\n                        \n                    \n                \n            \n            \n                \n                        \n                    of(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/util/pageable.ts:45\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Pageable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Sort } from \"./sort\";\n\nexport interface PageableRequest {\n  page: number;\n  size: number;\n  sort: Sort;\n}\n\nexport class Pageable {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  size: number;\n  number: number;\n  sort: Sort;\n  first: boolean;\n  numberOfElements: number;\n  empty: boolean;\n\n  constructor({\n    content = [],\n    totalElements = 0,\n    totalPages = 0,\n    last = false,\n    size = 0,\n    number = 0,\n    sort = \"id,asc\",\n    first = false,\n    numberOfElements = 0,\n    empty = false,\n  }) {\n    this.content = content;\n    this.totalElements = totalElements;\n    this.totalPages = totalPages;\n    this.last = last;\n    this.size = size;\n    this.number = number;\n    this.sort = Sort.of(sort);\n    this.first = first;\n    this.numberOfElements = numberOfElements;\n    this.empty = empty;\n  }\n\n  static of({\n    content = [],\n    totalElements = 0,\n    request = { page: 0, size: 20, sort: Sort.of(\"id,asc\") },\n  }:\n    {\n      content: T[],\n      totalElements: number,\n      request: PageableRequest\n    }\n  ) {\n    const { page, size, sort } = request;\n    const totalPages = Math.ceil(totalElements / size);\n    const last = page === totalPages - 1;\n    const first = page === 0;\n    const numberOfElements = content.length;\n    const empty = numberOfElements === 0;\n    return new Pageable({\n      content,\n      totalElements,\n      totalPages,\n      last,\n      size,\n      number: page,\n      sort: sort.toString(),\n      first,\n      numberOfElements,\n      empty,\n    });\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageableRequest.html":{"url":"interfaces/PageableRequest.html","title":"interface - PageableRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageableRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/util/pageable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         Sort\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sort\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sort } from \"./sort\";\n\nexport interface PageableRequest {\n  page: number;\n  size: number;\n  sort: Sort;\n}\n\nexport class Pageable {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  size: number;\n  number: number;\n  sort: Sort;\n  first: boolean;\n  numberOfElements: number;\n  empty: boolean;\n\n  constructor({\n    content = [],\n    totalElements = 0,\n    totalPages = 0,\n    last = false,\n    size = 0,\n    number = 0,\n    sort = \"id,asc\",\n    first = false,\n    numberOfElements = 0,\n    empty = false,\n  }) {\n    this.content = content;\n    this.totalElements = totalElements;\n    this.totalPages = totalPages;\n    this.last = last;\n    this.size = size;\n    this.number = number;\n    this.sort = Sort.of(sort);\n    this.first = first;\n    this.numberOfElements = numberOfElements;\n    this.empty = empty;\n  }\n\n  static of({\n    content = [],\n    totalElements = 0,\n    request = { page: 0, size: 20, sort: Sort.of(\"id,asc\") },\n  }:\n    {\n      content: T[],\n      totalElements: number,\n      request: PageableRequest\n    }\n  ) {\n    const { page, size, sort } = request;\n    const totalPages = Math.ceil(totalElements / size);\n    const last = page === totalPages - 1;\n    const first = page === 0;\n    const numberOfElements = content.length;\n    const empty = numberOfElements === 0;\n    return new Pageable({\n      content,\n      totalElements,\n      totalPages,\n      last,\n      size,\n      number: page,\n      sort: sort.toString(),\n      first,\n      numberOfElements,\n      empty,\n    });\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaRepository.html":{"url":"classes/PrismaRepository.html","title":"class - PrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/base.prisma-repository.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Repository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma, mapper)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/base.prisma-repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                    \n                        \n                                Defined in src/data/repository/prisma/base.prisma-repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/data/repository/prisma/base.prisma-repository.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/base.prisma-repository.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Repository } from \"../base.repository\";\nimport type { Model } from \"src/data/models\";\nimport type { Mapper } from \"src/data/mapper/base.mapper\";\nimport type { Filter, PageableRequest } from \"src/data/util\";\nimport { Pageable } from \"src/data/util\";\n\nexport class PrismaRepository implements Repository {\n  private $prisma;\n  private $mapper: Mapper;\n\n  constructor(prisma, mapper) {\n    this.$prisma = prisma;\n    this.$mapper = mapper;\n  }\n\n  async createOne(entity: M): Promise {\n    const r: D = await this.$prisma.create({ data: entity });\n    return this.$mapper.toEntity(r);\n  }\n\n  async createMany(entities: M[]): Promise {\n    const r: Array = await this.$prisma.createMany({ data: entities });\n    return r.map((d) => this.$mapper.toEntity(d));\n  }\n\n  async findOne(id: string): Promise {\n    const r: D = await this.$prisma.findFirst({ where: { id } });\n    return this.$mapper.toEntity(r);\n  }\n  async findMany({\n    filter,\n    pageable: { page, size, sort },\n  }: {\n    filter?: Filter;\n    pageable?: PageableRequest;\n  }): Promise> {\n    const totalElements = await this.$prisma.auth.count({ where: filter });\n    const content = await this.$prisma.auth.findMany({\n      where: filter,\n      orderBy: sort.getSort(),\n      skip: page * size,\n      take: size,\n    });\n    return Pageable.of({\n      content: content.map(this.$mapper.toEntity),\n      totalElements,\n      request: { page, size, sort },\n    });\n  }\n\n\n  async updateOne(id: string, entity: Partial): Promise {\n    const r: D = await this.$prisma.update({\n      where: { id }, data: this.$mapper.toData(entity)\n    });\n    return this.$mapper.toEntity(r);\n  }\n\n\n  async updateMany(filter: Filter, entity: Partial): Promise {\n    const r: Array = await this.$prisma.updateMany({\n      where: filter, data: this.$mapper.toData(entity)\n    });\n    return r.map((d) => this.$mapper.toEntity(d));\n  }\n\n\n  async deleteOne(id: string): Promise {\n    await this.$prisma.delete({ where: { id } });\n  }\n\n  deleteMany(filter: Filter): Promise {\n    return this.$prisma.deleteMany({ where: filter });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, type OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Repository.html":{"url":"interfaces/Repository.html","title":"interface - Repository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Repository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/base.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createMany\n                                    \n                                \n                                \n                                    \n                                        createOne\n                                    \n                                \n                                \n                                    \n                                        deleteMany\n                                    \n                                \n                                \n                                    \n                                        deleteOne\n                                    \n                                \n                                \n                                    \n                                        findMany\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        updateMany\n                                    \n                                \n                                \n                                    \n                                        updateOne\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMany\n                        \n                    \n                \n            \n            \n                \ncreateMany(entities: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOne\n                        \n                    \n                \n            \n            \n                \ncreateOne(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOne\n                        \n                    \n                \n            \n            \n                \ndeleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findMany\n                        \n                    \n                \n            \n            \n                \nfindMany(args: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMany\n                        \n                    \n                \n            \n            \n                \nupdateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOne\n                        \n                    \n                \n            \n            \n                \nupdateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/base.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Model } from \"src/data/models\";\nimport type { Filter } from \"src/data/util/filter\";\nimport type { Pageable, PageableRequest } from \"src/data/util/pageable\";\n\ninterface Repository {\n  createOne(entity: T): Promise;\n  createMany(entities: T[]): Promise>;\n  findOne(id: string): Promise;\n  findMany(args: {\n    filter?: Filter;\n    pageable?: PageableRequest;\n  }): Promise>;\n  updateOne(id: string, entity: Partial): Promise;\n  updateMany(filter: Filter, entity: Partial): Promise>;\n  deleteOne(id: string): Promise;\n  deleteMany(filter: Filter): Promise;\n}\n\nexport type { Repository };\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepositoryModule.html":{"url":"modules/RepositoryModule.html","title":"module - RepositoryModule","body":"\n                   \n\n\n\n\n    Modules\n    RepositoryModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/repository/repository.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [],\n})\nexport class RepositoryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reservation.html":{"url":"classes/Reservation.html","title":"class - Reservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/reservation.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                nb_people\n                            \n                            \n                                restaurantId\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nb_people\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReservationStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { ReservationStatus } from \"./enum\";\nimport type { Restaurant } from \"./restaurant.model\";\nimport type { UserProfile } from \"./user-profile.model\";/**\n * Model of the Reservation\n * @category Models\n * @interface Reservation\n * @param {string} id - id of the reservation : eg. abcdef123456\n * @param {Date} date - date of the reservation\n * @param {number} nb_people - number of people for the reservation\n * @param {ReservationStatus} status - status of the reservation\n * @param {UserProfile} user - user who made the reservation\n * @param {string} userId - id of the user : eg. abcdef123456\n * @param {Restaurant} restaurant - restaurant for the reservation\n * @param {string} restaurantId - id of the restaurant : eg. abcdef123456\n * @param {Date} createdAt - timestamp of the creation of the reservation\n * @param {Date} updatedAt - timestamp of the last update of the reservation\n */\nabstract class Reservation implements Model {\n  id: string;\n  date: Date;\n  nb_people: number;\n  status: ReservationStatus;\n  userId?: string;\n  restaurantId: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\nexport { Reservation };\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReservationPrismaRepository.html":{"url":"classes/ReservationPrismaRepository.html","title":"class - ReservationPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReservationPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/reservation.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            ReservationRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUserId\n                            \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/reservation.prisma-repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/prisma/reservation.prisma-repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Reservation } from \"src/data/models\";\nimport type { ReservationRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport { ReservationMapper } from \"src/data/mapper/prisma\";\nimport type { Reservation as PrismaReservation } from '@prisma/client';\n\n\nexport class ReservationPrismaRepository extends PrismaRepository implements ReservationRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.reservation, ReservationMapper);\n  }\n  async findByUserId(userId: string): Promise {\n    const reservation = await this.prisma.reservation.findFirst({ where: { userId } });\n    return ReservationMapper.toEntity(reservation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReservationRepository.html":{"url":"interfaces/ReservationRepository.html","title":"interface - ReservationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReservationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/reservation.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findByUserId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByUserId\n                        \n                    \n                \n            \n            \n                \nfindByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/repository/reservation.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type { Reservation } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\n\ninterface ReservationRepository extends Repository {\n  findByUserId(userId: string): Promise;\n}\n\nexport type { ReservationRepository };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Restaurant.html":{"url":"classes/Restaurant.html","title":"class - Restaurant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Restaurant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/restaurant.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Restaurant\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                code_postal\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                n_siret\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                price\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        code_postal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        n_siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PriceCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { PriceCategory } from \"./enum/price-category.enum\";\nimport type { Favorite } from \"./favorite.model\";\nimport type { Reservation } from \"./reservation.model\";\nimport type { RestaurantFeature } from \"./restaurant-feature.model\";\nimport type { RestaurateurProfile } from \"./restaurateur-profile\";\n\n/**\n * Model of the Restaurant\n * @category Models\n * @interface Restaurant\n * @param {string} id - id of the restaurant : eg. abcdef123456\n * @param {string} name - name of the restaurant\n * @param {string} address - address of the restaurant\n * @param {string} description - description of the restaurant\n * @param {PriceCategory} price - price category of the restaurant\n * @param {string} n_siret - siret number of the restaurant\n * @param {string} phone - phone number of the restaurant\n * @param {string} code_postal - postal code of the restaurant\n * @param {string} city - city of the restaurant\n * @param {string} email - email of the restaurant\n * @param {RestaurantFeature[]} features - features of the restaurant\n * @param {Favorite[]} favorites - favorites of the restaurant\n * @param {Reservation[]} reservations - reservations of the restaurant\n * @param {Date} createdAt - timestamp of the creation of the restaurant\n * @param {Date} updatedAt - timestamp of the last update of the restaurant\n * @param {RestaurateurProfile[]} restaurateur - profiles of the restaurateurs\n */\nabstract class Restaurant implements Model {\n  id: string;\n  name: string;\n  address: string;\n  description: string;\n  price: PriceCategory;\n  n_siret: string;\n  phone: string;\n  code_postal: string;\n  city: string;\n  email: string;\n  createdAt: Date;\n  updatedAt: Date;\n  deletedAt?: Date;\n}\n\nexport { Restaurant };\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurantFeature.html":{"url":"classes/RestaurantFeature.html","title":"class - RestaurantFeature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurantFeature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/restaurant-feature.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the RestaurantFeature\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { Category } from \"./category.model\";\n\n/**\n * Model of the RestaurantFeature\n * @category Models\n * @interface RestaurantFeature\n * @param {string} id - id of the feature : eg. abcdef123456\n * @param {string} name - name of the feature\n * @param {string} icon - icon of the feature\n * @param {Category} category - category of the feature\n * @param {string} categoryId - id of the category : eg. abcdef123456\n * @param {Restaurant[]} restaurant - restaurants with this feature\n */\nabstract class RestaurantFeature implements Model {\n  id: string;\n  name: string;\n  icon?: string;\n  categoryId: string;\n}\n\nexport { RestaurantFeature };\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurantFeaturePrismaRepository.html":{"url":"classes/RestaurantFeaturePrismaRepository.html","title":"class - RestaurantFeaturePrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurantFeaturePrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/restaurant-feature.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            RestaurantFeatureRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/restaurant-feature.prisma-repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { RestaurantFeature } from \"src/data/models\";\nimport type { RestaurantFeatureRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\nimport type { RestaurantFeature as PrismaRestaurantFeature } from '@prisma/client';\nimport { RestaurantFeatureMapper } from \"src/data/mapper/prisma\";\nimport type { PrismaService } from \"./prisma.service\";\n\n\nexport class RestaurantFeaturePrismaRepository extends PrismaRepository implements RestaurantFeatureRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.restaurantFeature, RestaurantFeatureMapper);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestaurantFeatureRepository.html":{"url":"interfaces/RestaurantFeatureRepository.html","title":"interface - RestaurantFeatureRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestaurantFeatureRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/restaurant-feature.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n\n\n\n    \n\n\n    \n        import type { RestaurantFeature } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\nimport type { Pageable } from \"../util\";\n\ninterface RestaurantFeatureRepository extends Repository {\n}\n\nexport type { RestaurantFeatureRepository };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurantPrismaRepository.html":{"url":"classes/RestaurantPrismaRepository.html","title":"class - RestaurantPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurantPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/restaurant.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            RestaurantRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/restaurant.prisma-repository.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Restaurant } from \"src/data/models\";\nimport type { RestaurantRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport { RestaurantMapper } from \"src/data/mapper/prisma\";\nimport type { Restaurant as PrismaRestaurant } from '@prisma/client';\nimport { Pageable } from \"src/data/util\";\n\n\nexport class RestaurantPrismaRepository extends PrismaRepository implements RestaurantRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.restaurant, RestaurantMapper);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestaurantRepository.html":{"url":"interfaces/RestaurantRepository.html","title":"interface - RestaurantRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestaurantRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/restaurant.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n\n\n\n    \n\n\n    \n        import type { Restaurant } from \"src/data/models\";\nimport type { Pageable } from \"../util\";\nimport type { Repository } from \"./base.repository\";\n\ninterface RestaurantRepository extends Repository {\n}\n\nexport type { RestaurantRepository };\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurateurPrismaRepository.html":{"url":"classes/RestaurateurPrismaRepository.html","title":"class - RestaurateurPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurateurPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/restaurateur.prisma-repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            RestaurateurRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/restaurateur.prisma-repository.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RestaurateurMapper } from \"src/data/mapper/prisma\";\nimport type { RestaurateurRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport type { RestaurateurProfile } from \"src/data/models\";\nimport type { RestaurateurProfile as PrismaRestaurateurProfile } from '@prisma/client';\n\n\nexport class RestaurateurPrismaRepository extends PrismaRepository implements RestaurateurRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.restaurateurProfile, RestaurateurMapper);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurateurProfile.html":{"url":"classes/RestaurateurProfile.html","title":"class - RestaurateurProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurateurProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/restaurateur-profile.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the RestaurateurProfile\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                banner\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                restaurantId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { Restaurant } from \"./restaurant.model\";\n\n/**\n * Model of the RestaurateurProfile\n * @category Models\n * @interface RestaurateurProfile\n * @param {string} id - id of the profile : eg. abcdef123456\n * @param {string} avatar - avatar of the restaurateur\n * @param {string} banner - banner of the restaurateur\n * @param {Restaurant} restaurant - restaurant of the profile\n * @param {string} restaurantId - id of the restaurant : eg. abcdef123456\n * @param {Date} createdAt - timestamp of the creation of the restaurant profile\n * @param {Date} updatedAt - timestamp of the last update of the restaurant profile\n */\nabstract class RestaurateurProfile implements Model {\n  id: string;\n  avatar?: string;\n  banner?: string;\n  restaurantId: string;\n  createdAt: Date;\n  updatedAt: Date;\n  deletedAt?: Date;\n}\n\nexport { RestaurateurProfile };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestaurateurRepository.html":{"url":"interfaces/RestaurateurRepository.html","title":"interface - RestaurateurRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestaurateurRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/restaurateur.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n\n\n\n    \n\n\n    \n        import type { RestaurateurProfile } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\n\n\ninterface RestaurateurRepository extends Repository { }\n\nexport type { RestaurateurRepository };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sort.html":{"url":"classes/Sort.html","title":"class - Sort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/util/sort.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSort\n                            \n                            \n                                    Static\n                                of\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sort: string)\n                    \n                \n                        \n                            \n                                Defined in src/data/util/sort.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sort\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/data/util/sort.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSort\n                        \n                    \n                \n            \n            \n                \ngetSort()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/util/sort.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        of\n                        \n                    \n                \n            \n            \n                \n                        \n                    of(sort: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/util/sort.ts:21\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sort\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Sort\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/util/sort.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Path } from './path';\n\n// /**\n//  * used to sort an entity E when fetching from the database\n//  * eg :  Sort = { foo.bar : \"asc\" }\n//  */\n\n// export type Sort = {\n//   [P in Path]?: 'asc' | 'desc';\n// }\n\n\nclass Sort {\n  private sort: { [key: string]: 'asc' | 'desc' } = {};\n\n  constructor(sort: string) {\n    const [field, order] = sort.split(',');\n    this.sort[field] = order as 'asc' | 'desc';\n  }\n\n  static of(sort: string): Sort {\n    return new Sort(sort);\n  }\n\n  getSort(): { [key: string]: 'asc' | 'desc' } {\n    return this.sort;\n  }\n\n  toString(): string {\n    return Object.entries(this.sort)\n      .map(([key, value]) => `${key},${value}`)\n      .join(',');\n  }\n}\n\nexport { Sort };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPrismaRepository.html":{"url":"classes/UserPrismaRepository.html","title":"class - UserPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/prisma/user.prisma-repository copy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PrismaRepository\n            \n\n            \n                Implements\n            \n            \n                            UserRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                $mapper\n                            \n                            \n                                    Private\n                                $prisma\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMany\n                            \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                deleteMany\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                findMany\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMany\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/repository/prisma/user.prisma-repository copy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $mapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        $prisma\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         PrismaRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         PrismaRepository:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMany(entities: M[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        M[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(entity: M)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMany\n                        \n                    \n                \n            \n            \n                \ndeleteMany(filter: Filter)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:73\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:69\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMany(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMany(filter: Filter, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            Filter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         PrismaRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         PrismaRepository:53\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserMapper } from \"src/data/mapper/prisma\";\nimport type { UserRepository } from \"..\";\nimport { PrismaRepository } from \"./base.prisma-repository\";\n// biome-ignore lint/style/useImportType: \nimport { PrismaService } from \"./prisma.service\";\nimport type { UserProfile } from \"src/data/models\";\nimport type { UserProfile as PrismaUserProfile } from '@prisma/client';\n\n\nexport class UserPrismaRepository extends PrismaRepository implements UserRepository {\n  constructor(private prisma: PrismaService) {\n    super(prisma.userProfile, UserMapper);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfile.html":{"url":"classes/UserProfile.html","title":"class - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/user-profile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the UserProfile\n\n            \n\n\n            \n                Implements\n            \n            \n                            Model\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                banner\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Model } from \"./base.model\";\nimport type { Favorite } from \"./favorite.model\";\nimport type { Reservation } from \"./reservation.model\";\n\n/**\n * Model of the UserProfile\n * @category Models\n * @interface UserProfile\n * @param {string} id - id of the profile : eg. abcdef123456\n * @param {string} avatar - avatar of the user\n * @param {string} banner - banner of the user\n * @param {Favorite[]} favorite - favorites of the user\n * @param {Reservation[]} reservation - reservations of the user\n * @param {Date} createdAt - timestamp of the creation of the user profile\n * @param {Date} updatedAt - timestamp of the last update of the user profile\n */\nabstract class UserProfile implements Model {\n  id: string;\n  avatar?: string;\n  banner?: string;\n  createdAt: Date;\n  updatedAt: Date;\n  deletedAt?: Date;\n}\n\nexport { UserProfile };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRepository.html":{"url":"interfaces/UserRepository.html","title":"interface - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/repository/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Repository\n            \n\n\n\n\n    \n\n\n    \n        import type { UserProfile } from \"src/data/models\";\nimport type { Repository } from \"./base.repository\";\n\n\ninterface UserRepository extends Repository { }\n\nexport type { UserRepository };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/mapper/base.mapper.ts\n            \n            interface\n            Mapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/auth.mapper.ts\n            \n            variable\n            AuthMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/category.mapper.ts\n            \n            variable\n            CategoryMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/favorite.mapper.ts.ts\n            \n            variable\n            FavoriteMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/reservation.mapper.ts\n            \n            variable\n            ReservationMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/restaurant-feature.mapper.ts\n            \n            variable\n            RestaurantFeatureMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/restaurant.mapper.ts\n            \n            variable\n            RestaurantMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/restaurateur.mapper.ts\n            \n            variable\n            RestaurateurMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mapper/prisma/user.mapper.ts\n            \n            variable\n            UserMapper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/models/auth.model.ts\n            \n            class\n            Auth\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/data/models/base.model.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/models/category.model.ts\n            \n            class\n            Category\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/data/models/favorite.model.ts\n            \n            class\n            Favorite\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/data/models/reservation.model.ts\n            \n            class\n            Reservation\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/data/models/restaurant-feature.model.ts\n            \n            class\n            RestaurantFeature\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/data/models/restaurant.model.ts\n            \n            class\n            Restaurant\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/data/models/restaurateur-profile.ts\n            \n            class\n            RestaurateurProfile\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/data/models/user-profile.model.ts\n            \n            class\n            UserProfile\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/data/repository/auth.repository.ts\n            \n            interface\n            AuthRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/repository/base.repository.ts\n            \n            interface\n            Repository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/data/repository/category.repository.ts\n            \n            interface\n            CategoryRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/repository/favorite.repository.ts\n            \n            interface\n            FavoriteRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/auth.prisma-repository.ts\n            \n            class\n            AuthPrismaRepository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/base.prisma-repository.ts\n            \n            class\n            PrismaRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/category.prisma-repository.ts\n            \n            class\n            CategoryPrismaRepository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/favorite.prisma-repository.ts\n            \n            class\n            FavoritePrismaRepository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/reservation.prisma-repository.ts\n            \n            class\n            ReservationPrismaRepository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/restaurant-feature.prisma-repository.ts\n            \n            class\n            RestaurantFeaturePrismaRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/restaurant.prisma-repository.ts\n            \n            class\n            RestaurantPrismaRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/restaurateur.prisma-repository.ts\n            \n            class\n            RestaurateurPrismaRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/data/repository/prisma/user.prisma-repository copy.ts\n            \n            class\n            UserPrismaRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/data/repository/reservation.repository.ts\n            \n            interface\n            ReservationRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/repository/restaurant-feature.repository.ts\n            \n            interface\n            RestaurantFeatureRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/repository/restaurant.repository.ts\n            \n            interface\n            RestaurantRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/repository/restaurateur.repository.ts\n            \n            interface\n            RestaurateurRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/repository/user.repository.ts\n            \n            interface\n            UserRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/util/pageable.ts\n            \n            class\n            Pageable\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/data/util/pageable.ts\n            \n            interface\n            PageableRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/data/util/sort.ts\n            \n            class\n            Sort\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/repl.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-middlewares/cookie-parser : ^10.0.0\n        \n            @nest-middlewares/errorhandler : ^10.0.0\n        \n            @nest-middlewares/helmet : ^10.0.0\n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/common : ^10.3.3\n        \n            @nestjs/config : ^3.2.0\n        \n            @nestjs/core : ^10.3.3\n        \n            @nestjs/platform-express : ^10.3.3\n        \n            @nestjs/swagger : ^7.3.0\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @prisma/client : ^5.10.2\n        \n            nestjs-rate-limiter : ^3.1.0\n        \n            reflect-metadata : ^0.1.14\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriceCategoryEnum   (src/.../price-category.enum.ts)\n                        \n                        \n                            ReservationStatusEnum   (src/.../reservation-status.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../role-enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data/models/enum/price-category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriceCategoryEnum\n                    \n                \n                    \n                        \n                            Enum of the price category\n\n                        \n                    \n                        \n                            \n                                 ECO\n                            \n                        \n                        \n                            \n                                Value : ECO\n                            \n                        \n                        \n                            \n                                 MODERATE\n                            \n                        \n                        \n                            \n                                Value : MODERATE\n                            \n                        \n                        \n                            \n                                 EXPENSIVE\n                            \n                        \n                        \n                            \n                                Value : EXPENSIVE\n                            \n                        \n                        \n                            \n                                 VERY_EXPENSIVE\n                            \n                        \n                        \n                            \n                                Value : VERY_EXPENSIVE\n                            \n                        \n            \n        \n\n    src/data/models/enum/reservation-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ReservationStatusEnum\n                    \n                \n                    \n                        \n                            Enum for reservation status\n\n                        \n                    \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : ACCEPTED\n                            \n                        \n                        \n                            \n                                 REFUSED\n                            \n                        \n                        \n                            \n                                Value : REFUSED\n                            \n                        \n            \n        \n\n    src/data/models/enum/role-enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 RESTAURATEUR\n                            \n                        \n                        \n                            \n                                Value : RESTAURATEUR\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepositoryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRepositoryModule\n\nRepositoryModule\n\nAppModule -->\n\nRepositoryModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Filter   (src/.../filter.ts)\n                        \n                        \n                            FilterValue   (src/.../filter.ts)\n                        \n                        \n                            Path   (src/.../path.ts)\n                        \n                        \n                            PathValue   (src/.../path.ts)\n                        \n                        \n                            PriceCategory   (src/.../price-category.enum.ts)\n                        \n                        \n                            ReservationStatus   (src/.../reservation-status.enum.ts)\n                        \n                        \n                            Role   (src/.../role-enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data/util/filter.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                    used to filter an entity E when fetching from the database\neg :  Filter = { foo.bar :{ is: \"fuzz\" } }\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterValue\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/data/util/path.ts\n    \n    \n        \n            \n                \n                    \n                    Path\n                \n            \n            \n                \n                    type A = { foo: {bar : string} } => Path = 'foo' | 'foo.bar'\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PathValue\n                \n            \n            \n                \n                    type A = { foo: {bar : string} } => PathValue = {bar : string} / PathValue = string\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/data/models/enum/price-category.enum.ts\n    \n    \n        \n            \n                \n                    \n                    PriceCategory\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/data/models/enum/reservation-status.enum.ts\n    \n    \n        \n            \n                \n                    \n                    ReservationStatus\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/data/models/enum/role-enum.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthMapper   (src/.../auth.mapper.ts)\n                        \n                        \n                            CategoryMapper   (src/.../category.mapper.ts)\n                        \n                        \n                            FavoriteMapper   (src/.../favorite.mapper.ts.ts)\n                        \n                        \n                            ReservationMapper   (src/.../reservation.mapper.ts)\n                        \n                        \n                            RestaurantFeatureMapper   (src/.../restaurant-feature.mapper.ts)\n                        \n                        \n                            RestaurantMapper   (src/.../restaurant.mapper.ts)\n                        \n                        \n                            RestaurateurMapper   (src/.../restaurateur.mapper.ts)\n                        \n                        \n                            UserMapper   (src/.../user.mapper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data/mapper/prisma/auth.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n\n  static toEntity(auth: PrismaAuth): Auth {\n    return {\n      ...auth,\n    }\n  }\n\n  static toData(auth: Auth): PrismaAuth {\n    return {\n      ...auth,\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/category.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoryMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n\n  static toEntity(category: PrismaCategory): Category {\n    return {\n      ...category,\n    }\n  }\n\n  static toData(category: Category): PrismaCategory {\n    return {\n      ...category,\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/favorite.mapper.ts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FavoriteMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n\n  static toEntity(favorite: PrismaFavorite): Favorite {\n    return {\n      ...favorite,\n    }\n  }\n\n  static toData(favorite: Favorite): PrismaFavorite {\n    return {\n      ...favorite,\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/reservation.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReservationMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n  static toEntity(reservation: PrismaReservation): Reservation {\n    return {\n      ...reservation,\n    }\n  }\n\n  static toData(reservation: Reservation): PrismaReservation {\n    return {\n      ...reservation,\n      userId: reservation.userId\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/restaurant-feature.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RestaurantFeatureMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n  static toEntity(restaurantFeature: PrismaRestaurantFeature): RestaurantFeature {\n    return {\n      ...restaurantFeature,\n    }\n  }\n\n  static toData(restaurantFeature: RestaurantFeature): PrismaRestaurantFeature {\n    return {\n      ...restaurantFeature,\n      icon: restaurantFeature.icon,\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/restaurant.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RestaurantMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n  static toEntity(restaurant: PrismaRestaurant): Restaurant {\n    return {\n      ...restaurant,\n    }\n  }\n\n\n  static toData(restaurant: Restaurant): PrismaRestaurant {\n    return {\n      ...restaurant,\n    }\n  }\n\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/restaurateur.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RestaurateurMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n  static toEntity(restaurateurProfile: PrismaRestaurateurProfile): RestaurateurProfile {\n    return {\n      ...restaurateurProfile,\n    }\n  }\n\n  static toData(restaurateurProfile: RestaurateurProfile): PrismaRestaurateurProfile {\n    return {\n      ...restaurateurProfile,\n      avatar: restaurateurProfile.avatar,\n      banner: restaurateurProfile.banner,\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/data/mapper/prisma/user.mapper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mapper\n\n                    \n                \n                \n                    \n                        Default value : class {\n\n  static toEntity(userProfile: PrismaUserProfile): UserProfile {\n    return {\n      ...userProfile,\n    }\n  }\n\n  static toData(userProfile: UserProfile): PrismaUserProfile {\n    return {\n      ...userProfile,\n      avatar: userProfile.avatar,\n      banner: userProfile.banner,\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
