var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.978,1,2.186]],["body/controllers/AppController.html",[0,3.259,1,3.602,2,2.665,3,0.467,4,0.415,5,0.415,6,3.767,7,0.928,8,0.028,9,1.409,10,3.212,11,3.767,12,0.467,13,0.225,14,3.297,15,2.945,16,0.023,17,0.023]],["title/modules/AppModule.html",[18,1.213,19,2.186]],["body/modules/AppModule.html",[1,2.928,2,2.237,3,0.267,4,0.237,5,0.237,7,1.042,8,0.029,9,0.807,10,2.962,11,2.156,12,0.267,13,0.129,16,0.016,17,0.016,18,1.624,19,4.045,20,1.177,21,1.277,22,1.525,23,1.525,24,1.277,25,2.649,26,1.525,27,2.156,28,2.156,29,2.156,30,2.962,31,3.247,32,3.247,33,2.237,34,1.525,35,1.525,36,2.565,37,2.472,38,1.277,39,2.565,40,3.762,41,0.696,42,2.565,43,1.686,44,1.088,45,1.088,46,2.565,47,1.277,48,2.565,49,2.565,50,2.565,51,2.156,52,2.565,53,3.277,54,2.156,55,2.565,56,2.156,57,2.156,58,2.565,59,2.156,60,3.762,61,3.762,62,2.156,63,2.156,64,2.156,65,3.762,66,2.156,67,2.565,68,2.565,69,2.565,70,2.565,71,2.565,72,2.565,73,2.565,74,2.565,75,2.565,76,2.565,77,2.565,78,2.565,79,2.565,80,2.565,81,2.565]],["title/injectables/AppService.html",[10,1.805,82,1.213]],["body/injectables/AppService.html",[3,0.45,4,0.4,5,0.4,7,0.733,8,0.028,9,1.361,10,2.909,12,0.45,13,0.217,16,0.023,17,0.023,38,2.67,41,1.174,47,2.154,82,1.955,83,2.347,84,3.637,85,0.671,86,6.092,87,4.326,88,1.456,89,2.573,90,4.326,91,4.326]],["title/classes/Auth.html",[13,0.167,92,2.186]],["body/classes/Auth.html",[3,0.298,4,0.265,5,0.265,7,0.689,8,0.028,12,0.298,13,0.143,16,0.017,17,0.017,41,1.538,85,0.443,88,1.646,92,4.089,93,1.123,94,2.403,95,1.042,96,1.483,97,1.725,98,1.603,99,1.189,100,2.799,101,3.583,102,2.312,103,3.583,104,3.985,105,3.068,106,1.225,107,3.074,108,2.858,109,2.858,110,2.858,111,2.858,112,2.858,113,2.858,114,1.311,115,2.103,116,1.123,117,1.212,118,0.526,119,2.6,120,1.212,121,1.311,122,2.207,123,1.551,124,1.311,125,1.7,126,1.212]],["title/classes/Category.html",[13,0.167,116,1.307]],["body/classes/Category.html",[3,0.351,4,0.312,5,0.312,7,0.773,8,0.028,12,0.351,13,0.169,16,0.019,17,0.019,41,1.404,44,2.456,85,0.524,88,1.62,93,1.326,95,1.231,96,1.664,97,1.937,98,1.752,99,1.334,102,2.456,106,1.119,114,1.549,116,2.472,117,1.432,118,0.622,119,2.374,120,1.432,121,1.549,126,1.432,127,2.838,128,4.66,129,3.007,130,3.376,131,3.376,132,3.376,133,1.326,134,2.838,135,2.483]],["title/classes/DatabaseHandler.html",[13,0.167,136,2.447]],["body/classes/DatabaseHandler.html",[3,0.453,4,0.402,5,0.402,7,0.911,8,0.028,12,0.453,13,0.218,16,0.023,17,0.023,93,1.708,95,1.585,106,1.163,118,0.991,126,1.844,136,3.957,137,3.655,138,3.655,139,4.522,140,5.379,141,3.655,142,4.348,143,2.585,144,4.348]],["title/modules/DatabaseModule.html",[18,1.213,30,1.805]],["body/modules/DatabaseModule.html",[3,0.358,4,0.319,5,0.319,7,0.946,8,0.028,9,1.083,12,0.358,13,0.173,16,0.02,17,0.02,18,1.905,20,1.579,21,1.714,22,2.047,23,2.047,24,1.714,25,3.107,26,3.107,30,3.493,33,2.751,34,2.047,35,2.047,37,3.041,145,2.893,146,2.893,147,2.893,148,2.893,149,3.57,150,3.519,151,3.257,152,3.442,153,3.442,154,2.893,155,3.442]],["title/injectables/DatabaseService.html",[82,1.213,150,1.805]],["body/injectables/DatabaseService.html",[3,0.24,4,0.214,5,0.214,7,0.789,8,0.029,9,0.726,12,0.24,13,0.116,14,1.698,15,1.517,16,0.015,17,0.015,38,1.732,41,1.264,43,3.062,44,2.228,45,1.976,47,2.084,82,1.268,83,1.252,85,0.358,88,1.634,89,2.489,92,2.286,101,2.286,102,1.475,103,3.062,104,3.688,106,1.213,117,0.979,133,0.907,150,1.887,151,2.527,154,1.94,156,1.94,157,3.773,158,3.478,159,4.185,160,4.185,161,1.517,162,2.308,163,2.308,164,3.478,165,3.478,166,2.308,167,3.518,168,2.308,169,4.185,170,3.916,171,2.308,172,5.253,173,2.308,174,4.185,175,2.308,176,2.308,177,1.252,178,2.308,179,3.518,180,2.308,181,3.518,182,3.478,183,2.77,184,2.77,185,2.068,186,1.252,187,2.308,188,2.308,189,2.308,190,2.308,191,2.308,192,1.373,193,2.308,194,2.308,195,2.308]],["title/interfaces/Entity.html",[98,1.126,118,0.613]],["body/interfaces/Entity.html",[3,0.514,4,0.457,5,0.457,8,0.026,12,0.514,16,0.025,17,0.025,98,1.966,118,0.909,196,2.678,197,4.149]],["title/classes/Favorite.html",[13,0.167,198,1.978]],["body/classes/Favorite.html",[3,0.286,4,0.255,5,0.255,7,0.785,8,0.028,12,0.286,13,0.138,16,0.017,17,0.017,41,1.518,45,1.678,85,0.427,88,1.631,93,1.081,95,1.003,96,1.443,97,1.678,98,1.569,99,1.156,100,2.751,102,2.445,106,1.21,107,2.515,114,1.262,116,1.081,117,1.167,118,0.507,119,2.567,120,1.966,121,2.127,122,1.492,123,1.492,126,1.167,133,2.396,186,3.127,198,3.428,199,2.312,200,3.73,201,3.73,202,2.75,203,2.75,204,2.75,205,2.75,206,3.015,207,2.75,208,2.75,209,1.808,210,2.312,211,3.957]],["title/modules/HashModule.html",[18,1.213,149,1.978]],["body/modules/HashModule.html",[3,0.405,4,0.36,5,0.36,7,0.848,8,0.028,9,1.222,12,0.405,13,0.195,16,0.021,17,0.021,18,2.021,20,1.783,21,1.934,22,2.31,23,2.31,24,1.934,25,3.297,26,3.297,33,2.979,34,2.31,35,2.31,149,3.756,177,3.583,212,3.266,213,3.266,214,3.266,215,3.885,216,3.885]],["title/injectables/HashService.html",[82,1.213,177,1.805]],["body/injectables/HashService.html",[3,0.323,4,0.287,5,0.287,7,0.73,8,0.028,9,0.975,12,0.323,13,0.156,16,0.018,17,0.018,38,2.145,41,1.452,43,2.831,44,1.827,45,1.827,47,2.145,82,1.57,83,1.682,85,0.481,88,1.677,89,2.562,99,1.259,103,3.515,106,1.07,157,3.823,161,3.253,177,2.337,217,2.607,218,4.161,219,4.95,220,4.308,221,4.308,222,3.101,223,4.308,224,5.348,225,3.101,226,5.348,227,4.308,228,3.101,229,1.682,230,2.281,231,2.281,232,4.308,233,3.101,234,3.621,235,3.101,236,3.101,237,3.101,238,3.101,239,3.101]],["title/controllers/HealthController.html",[0,1.978,240,2.186]],["body/controllers/HealthController.html",[0,2.231,2,2.231,3,0.391,4,0.347,5,0.347,7,0.829,8,0.029,9,1.18,12,0.391,13,0.188,15,3.219,16,0.021,17,0.021,38,2.439,41,1.018,47,1.868,85,0.582,89,2.231,161,2.466,218,4.117,240,3.219,241,3.154,242,3.752,243,4.898,244,5.781,245,3.752,246,3.752,247,3.752,248,3.752,249,3.752,250,3.752,251,4.898,252,4.898,253,4.898,254,2.76,255,3.752,256,3.752,257,3.752,258,3.752,259,3.752]],["title/modules/HealthModule.html",[18,1.213,31,1.978]],["body/modules/HealthModule.html",[2,3.076,3,0.425,4,0.378,5,0.378,7,1.011,8,0.029,9,1.285,12,0.425,13,0.205,16,0.022,17,0.022,18,1.886,20,1.874,31,3.076,37,2.684,240,3.731,254,3.004,260,4.084,261,4.084,262,5.172,263,3.433,264,4.084,265,4.084,266,4.084,267,4.084,268,4.084,269,4.084]],["title/interfaces/Model.html",[96,1.213,118,0.613]],["body/interfaces/Model.html",[3,0.514,4,0.457,5,0.457,8,0.026,12,0.514,16,0.025,17,0.025,96,2.117,118,0.909,196,2.678,270,4.149]],["title/interfaces/Pageable.html",[118,0.613,271,1.978]],["body/interfaces/Pageable.html",[3,0.396,4,0.352,5,0.352,8,0.027,12,0.571,16,0.021,17,0.021,85,0.59,88,1.341,99,1.443,106,0.822,118,1.011,124,1.744,143,2.937,196,2.062,229,3.456,271,3.67,272,2.498,273,3.246,274,3.263,275,3.455,276,2.796,277,3.634,278,2.796,279,2.796,280,2.796,281,2.796,282,4.037,283,2.796,284,2.796,285,2.796]],["title/interfaces/PageableRequest.html",[118,0.613,275,1.978]],["body/interfaces/PageableRequest.html",[3,0.376,4,0.334,5,0.334,8,0.028,12,0.557,16,0.02,17,0.02,85,0.561,88,1.546,99,1.396,106,1.158,118,0.986,124,1.658,143,3.523,196,1.96,229,3.545,271,2.841,272,2.374,273,2.374,274,2.841,275,3.183,276,4.19,277,4.358,278,2.658,279,2.658,280,2.658,281,2.658,282,3.938,283,2.658,284,2.658,285,2.658]],["title/interfaces/PageableResponse.html",[118,0.613,274,1.978]],["body/interfaces/PageableResponse.html",[3,0.313,4,0.278,5,0.278,8,0.028,12,0.507,16,0.018,17,0.018,85,0.466,88,1.432,99,1.232,106,1.344,118,0.897,124,2.421,143,3.304,196,1.63,229,3.595,271,2.506,272,1.975,273,1.975,274,2.894,275,2.506,276,2.211,277,4.087,278,3.881,279,3.581,280,3.881,281,3.881,282,4.513,283,3.881,284,3.881,285,3.881]],["title/injectables/PrismaService.html",[82,1.213,151,1.805]],["body/injectables/PrismaService.html",[3,0.425,4,0.378,5,0.378,7,0.876,8,0.028,9,1.285,12,0.425,13,0.205,16,0.022,17,0.022,38,2.575,41,1.109,47,2.033,82,1.886,83,2.216,85,0.634,97,1.732,151,2.806,157,3.731,273,3.4,286,3.433,287,5.677,288,6.29,289,4.084,290,3.433,291,3.433,292,4.084]],["title/classes/Reservation.html",[13,0.167,293,1.978]],["body/classes/Reservation.html",[3,0.232,4,0.207,5,0.207,7,0.776,8,0.028,12,0.353,13,0.112,16,0.014,17,0.014,41,1.574,45,1.942,85,0.346,88,1.544,93,0.877,95,0.814,96,1.236,97,1.438,98,1.388,99,0.991,100,2.484,102,2.286,105,2.723,106,1.254,107,3.315,114,1.024,115,1.642,116,0.877,117,0.947,118,0.411,119,2.661,120,1.739,121,1.881,122,1.839,123,1.211,124,1.024,125,1.327,126,0.947,133,2.279,186,2.924,200,3.369,201,3.369,206,2.723,209,1.467,210,1.876,229,2.484,230,1.642,293,3.633,294,1.876,295,4.579,296,4.925,297,2.232,298,2.232,299,2.232,300,2.232,301,2.232,302,2.232,303,3.85,304,2.232,305,2.232,306,2.232,307,2.232,308,2.232,309,2.232]],["title/classes/Restaurant.html",[13,0.167,133,1.307]],["body/classes/Restaurant.html",[3,0.19,4,0.169,5,0.169,7,0.808,8,0.028,12,0.19,13,0.092,16,0.012,17,0.012,41,1.623,44,1.901,85,0.283,88,1.73,93,0.716,95,1.739,96,1.056,97,1.229,98,1.22,99,0.847,100,2.228,101,2.945,102,1.901,105,2.442,106,1.293,107,2.589,114,0.836,115,1.341,116,1.138,117,0.773,118,0.336,119,2.744,120,0.773,121,0.836,122,1.572,123,0.989,124,0.836,125,1.084,126,0.773,129,2.228,133,2.438,134,1.532,135,3.297,185,2.665,192,1.084,198,2.442,229,1.572,293,2.442,310,1.532,311,4.481,312,4.481,313,4.107,314,3.297,315,4.107,316,4.481,317,3.297,318,2.665,319,1.823,320,1.823,321,1.823,322,1.823,323,1.823,324,1.823,325,1.823,326,1.823,327,1.823,328,1.823,329,1.823,330,1.823,331,3.452,332,1.823,333,1.823,334,2.699,335,1.823,336,1.823,337,1.532,338,1.532,339,1.823,340,1.823,341,1.823,342,1.823,343,1.823]],["title/classes/RestaurantFeature.html",[13,0.167,129,1.805]],["body/classes/RestaurantFeature.html",[3,0.285,4,0.253,5,0.253,7,0.782,8,0.028,12,0.285,13,0.137,16,0.017,17,0.017,41,1.515,44,2.273,45,1.671,85,0.424,88,1.691,93,1.074,95,0.996,96,1.436,97,1.671,98,1.564,99,1.151,102,2.368,106,1.207,114,1.254,116,2.423,117,1.159,118,0.503,119,2.561,120,1.671,121,1.808,126,1.159,128,4.505,129,2.907,133,2.314,209,1.796,344,4.836,345,2.298,346,5.055,347,4.505,348,2.733,349,2.733,350,2.733,351,2.733,352,2.733,353,2.733,354,2.733,355,2.298]],["title/classes/RestaurateurProfile.html",[13,0.167,334,2.186]],["body/classes/RestaurateurProfile.html",[3,0.269,4,0.24,5,0.24,7,0.641,8,0.028,12,0.269,13,0.13,16,0.016,17,0.016,41,1.536,45,2.09,85,0.402,88,1.674,93,1.017,95,0.943,96,1.38,97,1.606,98,1.516,99,1.106,100,2.673,102,2.323,105,2.93,106,1.223,107,2.972,114,1.187,116,1.017,117,1.098,118,0.477,119,2.596,120,1.606,121,1.737,122,2.054,123,1.404,124,1.187,125,1.539,126,1.098,133,2.423,183,3.118,184,3.118,192,2.93,200,3.625,209,1.701,318,2.251,334,3.446,356,4.877,357,2.175,358,2.588,359,2.588,360,2.588,361,2.588,362,2.588,363,2.588,364,2.588]],["title/modules/SeederModule.html",[18,1.213,32,1.978]],["body/modules/SeederModule.html",[3,0.396,4,0.352,5,0.352,7,0.929,8,0.028,9,1.195,12,0.396,13,0.191,16,0.021,17,0.021,18,2,20,1.744,21,1.892,22,2.26,23,2.26,24,1.892,25,3.263,26,2.26,30,3.349,32,3.788,33,2.937,34,2.26,35,2.26,37,3.246,365,3.195,366,3.8,367,3.195,368,3.67,369,3.8,370,3.8,371,3.8]],["title/injectables/SeederService.html",[82,1.213,368,1.978]],["body/injectables/SeederService.html",[3,0.179,4,0.159,5,0.159,7,0.673,8,0.029,9,0.541,12,0.179,13,0.086,14,1.265,15,1.13,16,0.012,17,0.012,38,1.376,41,1.461,43,1.13,44,1.471,45,0.729,47,2.611,82,1.008,83,0.933,85,0.267,89,2.062,104,1.13,106,0.372,133,1.561,135,1.265,150,2.155,157,4.157,161,1.13,167,2.915,179,3.908,181,1.445,183,2.062,184,2.062,185,1.022,186,2.361,192,1.644,291,4.409,314,1.265,317,1.265,318,1.644,355,1.445,368,1.644,372,1.445,373,3.972,374,3.972,375,3.972,376,3.972,377,3.972,378,3.972,379,3.972,380,3.972,381,3.972,382,1.719,383,1.719,384,2.764,385,1.719,386,1.719,387,1.719,388,1.719,389,1.719,390,1.719,391,1.719,392,1.719,393,1.719,394,1.719,395,1.265,396,1.265,397,1.265,398,1.719,399,1.719,400,5.082,401,4.108,402,1.719,403,1.719,404,1.719,405,4.649,406,2.764,407,3.467,408,1.719,409,1.719,410,1.719,411,4.649,412,3.908,413,4.649,414,2.922,415,1.719,416,1.719,417,1.719,418,1.719,419,3.467,420,2.764,421,1.719,422,1.719,423,1.719,424,1.719,425,1.719,426,1.719,427,1.719,428,1.719,429,2.764,430,1.719,431,1.719,432,1.719,433,1.719,434,1.719,435,1.719,436,1.719,437,1.719]],["title/classes/UserProfile.html",[13,0.167,206,1.978]],["body/classes/UserProfile.html",[3,0.242,4,0.215,5,0.215,7,0.711,8,0.028,12,0.242,13,0.116,16,0.015,17,0.015,41,1.59,44,1.781,45,1.981,85,0.36,88,1.698,93,0.912,95,0.846,96,1.273,97,1.481,98,1.421,99,1.02,100,2.534,102,2.232,105,2.778,106,1.267,107,2.856,114,1.065,116,0.912,117,0.984,118,0.427,119,2.579,120,1.481,121,1.602,122,1.894,123,1.259,124,1.065,125,1.38,126,0.984,183,2.979,184,2.979,185,2.497,186,2.963,192,2.497,198,3.342,201,3.436,206,2.979,293,3.342,314,1.707,317,1.707,337,1.951,338,1.951,438,5.001,439,1.951,440,2.32,441,2.32,442,2.32,443,2.32,444,2.32,445,2.32,446,2.32,447,2.32,448,2.32,449,2.32]],["title/coverage.html",[450,3.325]],["body/coverage.html",[0,2.204,1,1.652,5,0.233,6,2.113,8,0.028,10,1.364,13,0.295,16,0.016,17,0.016,24,1.845,82,1.889,84,2.113,92,1.652,94,2.113,96,0.916,98,0.851,106,0.544,116,0.988,118,0.954,127,2.113,129,1.364,133,0.988,136,1.849,137,2.113,138,2.113,150,1.364,151,1.364,156,2.113,177,1.364,197,2.113,198,1.495,199,2.113,206,1.495,217,2.113,240,1.652,241,2.113,270,2.113,271,1.495,272,2.893,274,1.495,275,1.495,286,2.113,293,1.495,294,2.113,310,2.113,334,1.652,344,2.113,345,2.113,356,2.113,357,2.113,368,1.495,372,2.113,395,1.849,396,1.849,397,1.849,412,2.113,438,2.113,439,2.113,450,1.849,451,2.513,452,2.513,453,2.513,454,5.414,455,5.973,456,4.859,457,2.513,458,2.513,459,3.706,460,4.402,461,4.402,462,2.513,463,2.513,464,3.115,465,3.706,466,2.113,467,2.513,468,2.513,469,2.513,470,3.115,471,5.181,472,2.113,473,2.113,474,3.701,475,3.706,476,2.513,477,2.113,478,3.706,479,2.113,480,2.513,481,2.513]],["title/dependencies.html",[21,1.989,482,2.343]],["body/dependencies.html",[8,0.029,9,1.227,16,0.021,17,0.021,21,1.943,51,3.28,53,4.088,54,3.28,56,3.28,57,3.28,59,3.28,62,3.28,63,3.28,64,3.28,66,3.28,234,3.28,254,2.871,263,3.28,290,3.28,483,5.557,484,3.902,485,5.557,486,3.902,487,3.902,488,3.902,489,3.902,490,3.902,491,3.902,492,3.902,493,3.902,494,3.902,495,3.902,496,3.902,497,3.902,498,3.902,499,3.902,500,3.902,501,3.902]],["title/miscellaneous/enumerations.html",[502,1.279,503,3.358]],["body/miscellaneous/enumerations.html",[8,0.028,16,0.021,17,0.021,85,0.595,104,3.265,186,2.695,231,4.786,303,4.176,318,2.954,331,4.176,414,3.654,502,1.759,503,3.223,504,3.834,505,4.967,506,3.834,507,4.967,508,3.834,509,4.967,510,3.834,511,4.967,512,4.967,513,4.967,514,4.967,515,3.834,516,4.967,517,4.967,518,4.967,519,3.834]],["title/miscellaneous/functions.html",[502,1.279,520,3.358]],["body/miscellaneous/functions.html",[8,0.024,16,0.024,17,0.024,24,3.265,85,0.753,477,4.08,479,4.08,502,2.227,520,4.08,521,4.853,522,4.853]],["title/index.html",[85,0.432,523,2.787,524,2.787]],["body/index.html",[4,0.309,8,0.028,16,0.019,17,0.019,53,3.784,95,1.217,401,2.805,450,2.455,525,3.337,526,3.337,527,4.53,528,3.337,529,3.337,530,3.337,531,3.337,532,3.337,533,3.337,534,3.337,535,3.337,536,3.337,537,3.337,538,5.143,539,6.084,540,3.337,541,3.337,542,3.337,543,5.948,544,3.337,545,3.337,546,4.53,547,3.337,548,3.337,549,3.337,550,3.337,551,4.53,552,4.53,553,3.337,554,3.337,555,3.337,556,4.53,557,4.53,558,3.337,559,3.337,560,3.337,561,3.337,562,3.337,563,2.805,564,3.337,565,3.337,566,3.337,567,3.337,568,3.337,569,3.337,570,3.337,571,3.337,572,3.337,573,2.805,574,3.337,575,3.337,576,3.337,577,3.337,578,3.337,579,3.337,580,2.805]],["title/modules.html",[20,2.074]],["body/modules.html",[8,0.023,16,0.023,17,0.023,19,2.991,20,2.088,30,2.469,31,2.706,32,2.706,149,2.706,563,5.212,581,6.2,582,6.2,583,6.354,584,4.551,585,4.551]],["title/overview.html",[586,3.8]],["body/overview.html",[2,1.905,8,0.028,10,2.732,16,0.019,17,0.019,18,1.168,19,4.138,20,1.47,21,1.595,22,1.905,23,1.905,24,1.595,25,1.905,26,1.905,27,2.692,28,2.692,29,2.692,30,3.449,31,2.994,32,3.579,33,2.62,34,1.905,35,1.905,83,1.738,93,1.259,145,2.692,146,2.692,147,2.692,148,2.692,149,3.494,150,3.265,151,2.732,177,3.265,196,1.738,212,2.692,213,2.692,214,2.692,365,2.692,367,2.692,368,2.994,464,2.692,466,4.233,586,2.692,587,2.692]],["title/properties.html",[99,1.168,482,2.343]],["body/properties.html",[8,0.028,16,0.025,17,0.025,95,1.789,99,1.434,573,4.126,580,4.126,588,4.908,589,4.908,590,4.908]],["title/miscellaneous/typealiases.html",[502,1.279,591,3.995]],["body/miscellaneous/typealiases.html",[8,0.029,16,0.02,17,0.02,85,0.534,88,1.517,98,1.566,106,1.208,120,1.962,139,3.889,141,4.697,143,3.322,170,2.893,502,1.579,592,3.442,593,4.626,594,4.626,595,5.225,596,4.626,597,5.587,598,3.442,599,3.442,600,4.626,601,4.626,602,4.626,603,5.225,604,3.442,605,3.442,606,5.225,607,5.225,608,3.442,609,3.442]],["title/miscellaneous/variables.html",[502,1.279,610,3.358]],["body/miscellaneous/variables.html",[8,0.029,16,0.018,17,0.018,44,2.629,85,0.814,101,3.175,103,3.175,106,1.045,129,1.608,183,2.482,184,2.482,185,1.763,230,4.066,231,4.066,318,1.763,347,4.647,395,3.071,396,3.071,397,3.071,414,2.181,454,2.492,470,2.492,472,3.509,473,3.509,474,2.492,502,1.36,587,2.492,610,2.492,611,4.831,612,4.174,613,2.964,614,2.964,615,2.964,616,2.964,617,2.964,618,2.964,619,4.174,620,2.964,621,2.964,622,2.964,623,2.964,624,2.964,625,2.964,626,2.964,627,2.964,628,2.964,629,2.964,630,2.964,631,2.964,632,2.964,633,2.964,634,2.964]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":589,"title":{},"body":{"properties.html":{}}}],["0.1.14",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":232,"title":{},"body":{"injectables/HashService.html":{}}}],["10.0.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["10.3.3",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":269,"title":{},"body":{"modules/HealthModule.html":{}}}],["12",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":587,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["33612345678",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":466,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["5.1.1",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["5.10.2",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":464,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["abcdef123456",{"_index":121,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["abstract",{"_index":126,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["accepted",{"_index":517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["address",{"_index":311,"title":{},"body":{"classes/Restaurant.html":{}}}],["admin",{"_index":414,"title":{},"body":{"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admin@munch.com",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminauth",{"_index":406,"title":{},"body":{"injectables/SeederService.html":{}}}],["administrator",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminseeder",{"_index":395,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminseeder.avatar",{"_index":417,"title":{},"body":{"injectables/SeederService.html":{}}}],["adminseeder.banner",{"_index":418,"title":{},"body":{"injectables/SeederService.html":{}}}],["adminseeder.email",{"_index":408,"title":{},"body":{"injectables/SeederService.html":{}}}],["adminseeder.name",{"_index":416,"title":{},"body":{"injectables/SeederService.html":{}}}],["adminseeder.password",{"_index":409,"title":{},"body":{"injectables/SeederService.html":{}}}],["aliases",{"_index":592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alimentaire",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":564,"title":{},"body":{"index.html":{}}}],["app",{"_index":541,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":533,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"injectables/PrismaService.html":{},"injectables/SeederService.html":{}}}],["auth",{"_index":92,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"injectables/DatabaseService.html":{},"coverage.html":{}}}],["auth[\"id",{"_index":182,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["authid",{"_index":172,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["author",{"_index":573,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":585,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":183,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":291,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/SeederService.html":{}}}],["backers",{"_index":565,"title":{},"body":{"index.html":{}}}],["banner",{"_index":184,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":607,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bcrypt",{"_index":234,"title":{},"body":{"injectables/HashService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":239,"title":{},"body":{"injectables/HashService.html":{}}}],["bcrypt.hash(password",{"_index":236,"title":{},"body":{"injectables/HashService.html":{}}}],["biome",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["boolean",{"_index":282,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":583,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":581,"title":{},"body":{"modules.html":{}}}],["building",{"_index":528,"title":{},"body":{"index.html":{}}}],["cacherout",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categories",{"_index":437,"title":{},"body":{"injectables/SeederService.html":{}}}],["categoriesfeaturesseeder",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":116,"title":{"classes/Category.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["category.enum.ts",{"_index":505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["category.model",{"_index":354,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["categoryid",{"_index":346,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["check",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{}}}],["city",{"_index":312,"title":{},"body":{"classes/Restaurant.html":{}}}],["class",{"_index":13,"title":{"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["classes",{"_index":93,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"overview.html":{}}}],["client",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client@test.com",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":145,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":146,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_imports",{"_index":147,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":148,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_hashmodule",{"_index":212,"title":{},"body":{"modules/HashModule.html":{},"overview.html":{}}}],["cluster_hashmodule_exports",{"_index":213,"title":{},"body":{"modules/HashModule.html":{},"overview.html":{}}}],["cluster_hashmodule_providers",{"_index":214,"title":{},"body":{"modules/HashModule.html":{},"overview.html":{}}}],["cluster_seedermodule",{"_index":365,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_imports",{"_index":366,"title":{},"body":{"modules/SeederModule.html":{}}}],["cluster_seedermodule_providers",{"_index":367,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["code",{"_index":341,"title":{},"body":{"classes/Restaurant.html":{}}}],["code_postal",{"_index":313,"title":{},"body":{"classes/Restaurant.html":{}}}],["compare",{"_index":238,"title":{},"body":{"injectables/HashService.html":{}}}],["comparepassword",{"_index":220,"title":{},"body":{"injectables/HashService.html":{}}}],["comparepassword(password",{"_index":223,"title":{},"body":{"injectables/HashService.html":{}}}],["configmodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":405,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor",{"_index":161,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"injectables/SeederService.html":{}}}],["constructor(db",{"_index":382,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(prisma",{"_index":162,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/DatabaseService.html":{},"injectables/SeederService.html":{}}}],["consumer",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(cookieparsermiddleware).forroutes",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(errorhandlermiddleware).forroutes",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(helmetmiddleware).forroutes",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":278,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('health",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["cookieparsermiddleware",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["cookieparsermiddleware.configure(\"mysecret",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":450,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":179,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/SeederService.html":{}}}],["createauth",{"_index":158,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createauth(email",{"_index":165,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createdat",{"_index":100,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["createrestaurantprofile",{"_index":159,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createrestaurantprofile(authid",{"_index":168,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createuser",{"_index":160,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["createuser(authid",{"_index":173,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["creation",{"_index":123,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["cuid",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["cuisine",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'établissement",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":181,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/SeederService.html":{}}}],["data/database/database.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["data/seeder/seeder.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["database",{"_index":139,"title":{},"body":{"classes/DatabaseHandler.html":{},"miscellaneous/typealiases.html":{}}}],["database.service",{"_index":153,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":371,"title":{},"body":{"modules/SeederModule.html":{}}}],["database/database.service",{"_index":394,"title":{},"body":{"injectables/SeederService.html":{}}}],["databasehandler",{"_index":136,"title":{"classes/DatabaseHandler.html":{}},"body":{"classes/DatabaseHandler.html":{},"coverage.html":{}}}],["databasemodule",{"_index":30,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseservice",{"_index":150,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":107,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["db",{"_index":384,"title":{},"body":{"injectables/SeederService.html":{}}}],["de",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["decorators",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{}}}],["default",{"_index":230,"title":{},"body":{"injectables/HashService.html":{},"classes/Reservation.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":95,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":542,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["e",{"_index":601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["e2e",{"_index":553,"title":{},"body":{"index.html":{}}}],["eco",{"_index":511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["efficient",{"_index":529,"title":{},"body":{"index.html":{}}}],["eg",{"_index":120,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["email",{"_index":101,"title":{},"body":{"classes/Auth.html":{},"injectables/DatabaseService.html":{},"classes/Restaurant.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":285,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["entity",{"_index":98,"title":{"interfaces/Entity.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["entity.model",{"_index":114,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["enum",{"_index":115,"title":{},"body":{"classes/Auth.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{}}}],["enum.ts",{"_index":509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":503,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error(\"failed",{"_index":413,"title":{},"body":{"injectables/SeederService.html":{}}}],["errorhandlermiddleware",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["errorhandlermiddleware.configure",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["errorlogstyle",{"_index":266,"title":{},"body":{"modules/HealthModule.html":{}}}],["example",{"_index":538,"title":{},"body":{"index.html":{}}}],["expensive",{"_index":513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["express",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":273,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{}}}],["false",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["favorite",{"_index":198,"title":{"classes/Favorite.html":{}},"body":{"classes/Favorite.html":{},"classes/Restaurant.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["favorite.model",{"_index":337,"title":{},"body":{"classes/Restaurant.html":{},"classes/UserProfile.html":{}}}],["favorited",{"_index":211,"title":{},"body":{"classes/Favorite.html":{}}}],["favorites",{"_index":314,"title":{},"body":{"classes/Restaurant.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["feature",{"_index":128,"title":{},"body":{"classes/Category.html":{},"classes/RestaurantFeature.html":{}}}],["feature.model",{"_index":134,"title":{},"body":{"classes/Category.html":{},"classes/Restaurant.html":{}}}],["feature.model.ts",{"_index":345,"title":{},"body":{"classes/RestaurantFeature.html":{},"coverage.html":{}}}],["feature.model.ts:17",{"_index":351,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:18",{"_index":352,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:19",{"_index":350,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:20",{"_index":348,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:21",{"_index":349,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["feature.model.ts:22",{"_index":353,"title":{},"body":{"classes/RestaurantFeature.html":{}}}],["features",{"_index":135,"title":{},"body":{"classes/Category.html":{},"classes/Restaurant.html":{},"injectables/SeederService.html":{}}}],["featuresseeder",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["filter",{"_index":141,"title":{},"body":{"classes/DatabaseHandler.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["first",{"_index":283,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["foo",{"_index":606,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["foo.bar",{"_index":603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["framework",{"_index":527,"title":{},"body":{"index.html":{}}}],["function",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":520,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fuzz",{"_index":604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["get()@healthcheck",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":523,"title":{"index.html":{}},"body":{}}],["gluten",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gracefulshutdowntimeoutms",{"_index":268,"title":{},"body":{"modules/HealthModule.html":{}}}],["graph",{"_index":584,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":560,"title":{},"body":{"index.html":{}}}],["halal",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":140,"title":{},"body":{"classes/DatabaseHandler.html":{}}}],["handler.interface.ts",{"_index":138,"title":{},"body":{"classes/DatabaseHandler.html":{},"coverage.html":{}}}],["hash",{"_index":235,"title":{},"body":{"injectables/HashService.html":{}}}],["hash.service",{"_index":216,"title":{},"body":{"modules/HashModule.html":{}}}],["hashedpassword",{"_index":224,"title":{},"body":{"injectables/HashService.html":{}}}],["hashmodule",{"_index":149,"title":{"modules/HashModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules.html":{},"overview.html":{}}}],["hashpassword",{"_index":221,"title":{},"body":{"injectables/HashService.html":{}}}],["hashpassword(password",{"_index":227,"title":{},"body":{"injectables/HashService.html":{}}}],["hashservice",{"_index":177,"title":{"injectables/HashService.html":{}},"body":{"injectables/DatabaseService.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"coverage.html":{},"overview.html":{}}}],["health",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":264,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":240,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":31,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["helmetmiddleware",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["helmetmiddleware.configure",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":401,"title":{},"body":{"injectables/SeederService.html":{},"index.html":{}}}],["http",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":262,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://api.dicebear.com/8.x/shapes/svg?seed=client",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.dicebear.com/8.x/shapes/svg?seed=sugar",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://google.com",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://nestjs.com",{"_index":577,"title":{},"body":{"index.html":{}}}],["https://picsum.photos/seed/client/800",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/seed/munch/800",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":347,"title":{},"body":{"classes/RestaurantFeature.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":102,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["identifier",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["implements",{"_index":97,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["import(\"@nestjs/common\").middlewareconsumer",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HealthModule.html":{},"modules/SeederModule.html":{}}}],["index",{"_index":85,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"injectables/PrismaService.html":{},"injectables/SeederService.html":{}},"body":{"injectables/AppService.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"injectables/PrismaService.html":{},"injectables/SeederService.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"injectables/PrismaService.html":{},"injectables/SeederService.html":{},"overview.html":{}}}],["installation",{"_index":537,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":540,"title":{},"body":{"index.html":{}}}],["interface",{"_index":118,"title":{"interfaces/Entity.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["interfaces",{"_index":196,"title":{},"body":{"interfaces/Entity.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":176,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["join",{"_index":567,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":574,"title":{},"body":{"index.html":{}}}],["last",{"_index":124,"title":{},"body":{"classes/Auth.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["license",{"_index":580,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":557,"title":{},"body":{"index.html":{}}}],["limiter",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lint/style/useimporttype",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["literal",{"_index":170,"title":{},"body":{"injectables/DatabaseService.html":{},"miscellaneous/typealiases.html":{}}}],["log",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":309,"title":{},"body":{"classes/Reservation.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"injectables/PrismaService.html":{},"injectables/SeederService.html":{}}}],["middlewares/cookie",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["middlewares/errorhandler",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["middlewares/helmet",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["miscellaneous",{"_index":502,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":556,"title":{},"body":{"index.html":{}}}],["mode",{"_index":546,"title":{},"body":{"index.html":{}}}],["model",{"_index":96,"title":{"interfaces/Model.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"interfaces/Model.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["models",{"_index":117,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["moderate",{"_index":512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/HealthModule.html":{},"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/HealthModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["module/health/health.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/HealthModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":570,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":575,"title":{},"body":{"index.html":{}}}],["n_siret",{"_index":315,"title":{},"body":{"classes/Restaurant.html":{}}}],["name",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["nb_people",{"_index":295,"title":{},"body":{"classes/Reservation.html":{}}}],["nest",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":579,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":263,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/PrismaService.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["nestjs/terminus",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["new",{"_index":412,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["node.js",{"_index":526,"title":{},"body":{"index.html":{}}}],["npm",{"_index":539,"title":{},"body":{"index.html":{}}}],["number",{"_index":229,"title":{},"body":{"injectables/HashService.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{}}}],["numberofelements",{"_index":284,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["onmoduleinit",{"_index":288,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":558,"title":{},"body":{"index.html":{}}}],["optional",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"injectables/HashService.html":{},"classes/Reservation.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["overview",{"_index":586,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":482,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":276,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["pageable",{"_index":271,"title":{"interfaces/Pageable.html":{}},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"coverage.html":{}}}],["pageablerequest",{"_index":275,"title":{"interfaces/PageableRequest.html":{}},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"coverage.html":{}}}],["pageableresponse",{"_index":274,"title":{"interfaces/PageableResponse.html":{}},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"coverage.html":{}}}],["param",{"_index":119,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"injectables/SeederService.html":{}}}],["parser",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["password",{"_index":103,"title":{},"body":{"classes/Auth.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pathvalue",{"_index":597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pending",{"_index":516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["people",{"_index":308,"title":{},"body":{"classes/Reservation.html":{}}}],["phone",{"_index":185,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/Restaurant.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":568,"title":{},"body":{"index.html":{}}}],["postal",{"_index":340,"title":{},"body":{"classes/Restaurant.html":{}}}],["prefix",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["pretty",{"_index":267,"title":{},"body":{"modules/HealthModule.html":{}}}],["price",{"_index":316,"title":{},"body":{"classes/Restaurant.html":{}}}],["pricecategory",{"_index":331,"title":{},"body":{"classes/Restaurant.html":{},"miscellaneous/enumerations.html":{}}}],["prisma",{"_index":164,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["prisma/client",{"_index":290,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":154,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{}}}],["prismaclient",{"_index":287,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":151,"title":{"injectables/PrismaService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":218,"title":{},"body":{"injectables/HashService.html":{},"controllers/HealthController.html":{}}}],["production",{"_index":548,"title":{},"body":{"index.html":{}}}],["profile",{"_index":192,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["profile.model",{"_index":210,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{}}}],["profile.model.ts",{"_index":439,"title":{},"body":{"classes/UserProfile.html":{},"coverage.html":{}}}],["profile.model.ts:19",{"_index":444,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:20",{"_index":449,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:21",{"_index":445,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:22",{"_index":446,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:23",{"_index":440,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:24",{"_index":441,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:25",{"_index":443,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:26",{"_index":447,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:27",{"_index":442,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:28",{"_index":448,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.seeder",{"_index":398,"title":{},"body":{"injectables/SeederService.html":{}}}],["profile.ts",{"_index":357,"title":{},"body":{"classes/RestaurateurProfile.html":{},"coverage.html":{}}}],["profile.ts:17",{"_index":361,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:18",{"_index":358,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:19",{"_index":359,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:20",{"_index":362,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:21",{"_index":363,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:22",{"_index":360,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profile.ts:23",{"_index":364,"title":{},"body":{"classes/RestaurateurProfile.html":{}}}],["profiles",{"_index":342,"title":{},"body":{"classes/Restaurant.html":{}}}],["progressive",{"_index":525,"title":{},"body":{"index.html":{}}}],["project",{"_index":559,"title":{},"body":{"index.html":{}}}],["promise",{"_index":226,"title":{},"body":{"injectables/HashService.html":{}}}],["promise.resolve",{"_index":419,"title":{},"body":{"injectables/SeederService.html":{}}}],["properties",{"_index":99,"title":{"properties.html":{}},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/Favorite.html":{},"injectables/HashService.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"properties.html":{}}}],["provide",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["rate",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ratelimiterguard",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["ratelimitermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":569,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/DatabaseService.html":{},"controllers/HealthController.html":{},"injectables/SeederService.html":{}}}],["reflect",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["refused",{"_index":518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repository",{"_index":536,"title":{},"body":{"index.html":{}}}],["reservation",{"_index":293,"title":{"classes/Reservation.html":{}},"body":{"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["reservation.model",{"_index":338,"title":{},"body":{"classes/Restaurant.html":{},"classes/UserProfile.html":{}}}],["reservations",{"_index":317,"title":{},"body":{"classes/Restaurant.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{}}}],["reservationstatus",{"_index":303,"title":{},"body":{"classes/Reservation.html":{},"miscellaneous/enumerations.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}],["restaurant",{"_index":133,"title":{"classes/Restaurant.html":{}},"body":{"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"coverage.html":{}}}],["restaurant.model",{"_index":209,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{}}}],["restaurantdto",{"_index":169,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["restaurantdto.avatar",{"_index":194,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["restaurantdto.banner",{"_index":195,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["restaurantfeature",{"_index":129,"title":{"classes/RestaurantFeature.html":{}},"body":{"classes/Category.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurantid",{"_index":200,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/RestaurateurProfile.html":{}}}],["restaurants",{"_index":355,"title":{},"body":{"classes/RestaurantFeature.html":{},"injectables/SeederService.html":{}}}],["restaurantseeder",{"_index":397,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restaurantseeder.avatar",{"_index":435,"title":{},"body":{"injectables/SeederService.html":{}}}],["restaurantseeder.banner",{"_index":436,"title":{},"body":{"injectables/SeederService.html":{}}}],["restaurantseeder.email",{"_index":430,"title":{},"body":{"injectables/SeederService.html":{}}}],["restaurantseeder.password",{"_index":431,"title":{},"body":{"injectables/SeederService.html":{}}}],["restaurateur",{"_index":318,"title":{},"body":{"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["restaurateur@test.com",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restaurateurauth",{"_index":429,"title":{},"body":{"injectables/SeederService.html":{}}}],["restaurateurauth.id",{"_index":434,"title":{},"body":{"injectables/SeederService.html":{}}}],["restaurateurprofile",{"_index":334,"title":{"classes/RestaurateurProfile.html":{}},"body":{"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"coverage.html":{}}}],["restaurateurs",{"_index":343,"title":{},"body":{"classes/Restaurant.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"injectables/SeederService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/DatabaseService.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"injectables/PrismaService.html":{},"injectables/SeederService.html":{}}}],["role",{"_index":104,"title":{},"body":{"classes/Auth.html":{},"injectables/DatabaseService.html":{},"injectables/SeederService.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":410,"title":{},"body":{"injectables/SeederService.html":{}}}],["role.restaurateur",{"_index":432,"title":{},"body":{"injectables/SeederService.html":{}}}],["role.user",{"_index":423,"title":{},"body":{"injectables/SeederService.html":{}}}],["run",{"_index":543,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["régime",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saltorrounds",{"_index":219,"title":{},"body":{"injectables/HashService.html":{}}}],["sans",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":530,"title":{},"body":{"index.html":{}}}],["seed",{"_index":400,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedadmin",{"_index":373,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedall",{"_index":374,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedcategories",{"_index":375,"title":{},"body":{"injectables/SeederService.html":{}}}],["seeder.service",{"_index":370,"title":{},"body":{"modules/SeederModule.html":{}}}],["seedermodule",{"_index":32,"title":{"modules/SeederModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeederModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":368,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seedfavorites",{"_index":376,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedreservations",{"_index":377,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedrestaurantfeatures",{"_index":378,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedrestaurantprofiles",{"_index":379,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedrestaurants",{"_index":380,"title":{},"body":{"injectables/SeederService.html":{}}}],["seedusers",{"_index":381,"title":{},"body":{"injectables/SeederService.html":{}}}],["server",{"_index":531,"title":{},"body":{"index.html":{}}}],["side",{"_index":532,"title":{},"body":{"index.html":{}}}],["siret",{"_index":339,"title":{},"body":{"classes/Restaurant.html":{}}}],["size",{"_index":277,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["sort",{"_index":143,"title":{},"body":{"classes/DatabaseHandler.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"interfaces/Entity.html":{},"classes/Favorite.html":{},"modules/HashModule.html":{},"injectables/HashService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Model.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"injectables/PrismaService.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"index.html":{}}}],["sponsors",{"_index":562,"title":{},"body":{"index.html":{}}}],["src/.../features.seeder.ts",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter.ts",{"_index":593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../path.ts",{"_index":596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../price",{"_index":504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.seeder.ts",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../repl.ts",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reservation",{"_index":506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role",{"_index":508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sort.ts",{"_index":598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:32",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["src/data/database/database",{"_index":137,"title":{},"body":{"classes/DatabaseHandler.html":{},"coverage.html":{}}}],["src/data/database/database.module.ts",{"_index":152,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/data/database/database.service.ts",{"_index":156,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/data/database/database.service.ts:10",{"_index":166,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/data/database/database.service.ts:21",{"_index":175,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/data/database/database.service.ts:42",{"_index":171,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/data/database/database.service.ts:7",{"_index":163,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/data/database/prisma/prisma.service.ts",{"_index":286,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/data/database/prisma/prisma.service.ts:6",{"_index":289,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/data/models/auth.model.ts",{"_index":94,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/data/models/auth.model.ts:16",{"_index":110,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:17",{"_index":109,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:18",{"_index":111,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:19",{"_index":108,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:20",{"_index":113,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/auth.model.ts:21",{"_index":112,"title":{},"body":{"classes/Auth.html":{}}}],["src/data/models/category.model.ts",{"_index":127,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/data/models/category.model.ts:13",{"_index":131,"title":{},"body":{"classes/Category.html":{}}}],["src/data/models/category.model.ts:14",{"_index":132,"title":{},"body":{"classes/Category.html":{}}}],["src/data/models/category.model.ts:15",{"_index":130,"title":{},"body":{"classes/Category.html":{}}}],["src/data/models/entity.model.ts",{"_index":197,"title":{},"body":{"interfaces/Entity.html":{},"coverage.html":{}}}],["src/data/models/enum",{"_index":399,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/models/enum/price",{"_index":510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/data/models/enum/reservation",{"_index":515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/data/models/enum/role",{"_index":519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/data/models/favorite.model.ts",{"_index":199,"title":{},"body":{"classes/Favorite.html":{},"coverage.html":{}}}],["src/data/models/favorite.model.ts:17",{"_index":203,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:18",{"_index":207,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:19",{"_index":208,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:20",{"_index":204,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:21",{"_index":205,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/favorite.model.ts:22",{"_index":202,"title":{},"body":{"classes/Favorite.html":{}}}],["src/data/models/model.interface.ts",{"_index":270,"title":{},"body":{"interfaces/Model.html":{},"coverage.html":{}}}],["src/data/models/reservation.model.ts",{"_index":294,"title":{},"body":{"classes/Reservation.html":{},"coverage.html":{}}}],["src/data/models/reservation.model.ts:22",{"_index":299,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:23",{"_index":298,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:24",{"_index":300,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:25",{"_index":304,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:26",{"_index":306,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:27",{"_index":307,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:28",{"_index":301,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:29",{"_index":302,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:30",{"_index":297,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/reservation.model.ts:31",{"_index":305,"title":{},"body":{"classes/Reservation.html":{}}}],["src/data/models/restaurant",{"_index":344,"title":{},"body":{"classes/RestaurantFeature.html":{},"coverage.html":{}}}],["src/data/models/restaurant.model.ts",{"_index":310,"title":{},"body":{"classes/Restaurant.html":{},"coverage.html":{}}}],["src/data/models/restaurant.model.ts:30",{"_index":327,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:31",{"_index":329,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:32",{"_index":319,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:33",{"_index":323,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:34",{"_index":332,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:35",{"_index":328,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:36",{"_index":330,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:37",{"_index":321,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:38",{"_index":320,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:39",{"_index":324,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:40",{"_index":326,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:41",{"_index":325,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:42",{"_index":333,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:43",{"_index":322,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:44",{"_index":336,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurant.model.ts:45",{"_index":335,"title":{},"body":{"classes/Restaurant.html":{}}}],["src/data/models/restaurateur",{"_index":356,"title":{},"body":{"classes/RestaurateurProfile.html":{},"coverage.html":{}}}],["src/data/models/user",{"_index":438,"title":{},"body":{"classes/UserProfile.html":{},"coverage.html":{}}}],["src/data/seeder/features.seeder.ts",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/seeder/profile.seeder.ts",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/data/seeder/seeder.module.ts",{"_index":369,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/data/seeder/seeder.service.ts",{"_index":372,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/data/seeder/seeder.service.ts:10",{"_index":386,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:103",{"_index":389,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:107",{"_index":388,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:17",{"_index":385,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:40",{"_index":393,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:65",{"_index":391,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:7",{"_index":383,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:91",{"_index":392,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:95",{"_index":390,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/seeder/seeder.service.ts:99",{"_index":387,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/data/util/filter.ts",{"_index":599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/data/util/pageable.ts",{"_index":272,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"coverage.html":{}}}],["src/data/util/path.ts",{"_index":605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/data/util/sort.ts",{"_index":608,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/health/health.controller.ts",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/module/health/health.controller.ts:14",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/module/health/health.module.ts",{"_index":260,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/repl.ts",{"_index":479,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/util/hash/hash.module",{"_index":155,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/util/hash/hash.module.ts",{"_index":215,"title":{},"body":{"modules/HashModule.html":{}}}],["src/util/hash/hash.service",{"_index":178,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/util/hash/hash.service.ts",{"_index":217,"title":{},"body":{"injectables/HashService.html":{},"coverage.html":{}}}],["src/util/hash/hash.service.ts:10",{"_index":228,"title":{},"body":{"injectables/HashService.html":{}}}],["src/util/hash/hash.service.ts:15",{"_index":225,"title":{},"body":{"injectables/HashService.html":{}}}],["src/util/hash/hash.service.ts:5",{"_index":222,"title":{},"body":{"injectables/HashService.html":{}}}],["src/util/hash/hash.service.ts:8",{"_index":233,"title":{},"body":{"injectables/HashService.html":{}}}],["start",{"_index":544,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":547,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":549,"title":{},"body":{"index.html":{}}}],["started",{"_index":524,"title":{"index.html":{}},"body":{}}],["starter",{"_index":535,"title":{},"body":{"index.html":{}}}],["statements",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":296,"title":{},"body":{"classes/Reservation.html":{}}}],["status.enum.ts",{"_index":507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":571,"title":{},"body":{"index.html":{}}}],["string",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"classes/Auth.html":{},"classes/Category.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"injectables/HashService.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["support",{"_index":563,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":582,"title":{},"body":{"modules.html":{}}}],["t",{"_index":279,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["table",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["terminusmodule",{"_index":261,"title":{},"body":{"modules/HealthModule.html":{}}}],["terminusmodule.forroot",{"_index":265,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":552,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":555,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":554,"title":{},"body":{"index.html":{}}}],["tests",{"_index":551,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":561,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":292,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.db.createauth",{"_index":407,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.db.createrestaurantprofile",{"_index":433,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.db.createuser(adminauth.id",{"_index":415,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.db.createuser(userauth.id",{"_index":424,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.health.check",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('google",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.prisma.auth.create",{"_index":180,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.prisma.restaurateurprofile.create",{"_index":193,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.prisma.userprofile.create",{"_index":187,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.saltorrounds",{"_index":237,"title":{},"body":{"injectables/HashService.html":{}}}],["this.seedadmin",{"_index":402,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedrestaurantprofiles",{"_index":404,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedusers",{"_index":403,"title":{},"body":{"injectables/SeederService.html":{}}}],["throw",{"_index":411,"title":{},"body":{"injectables/SeederService.html":{}}}],["timestamp",{"_index":122,"title":{},"body":{"classes/Auth.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["totalelements",{"_index":280,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["totalpages",{"_index":281,"title":{},"body":{"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{}}}],["touch",{"_index":572,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":578,"title":{},"body":{"index.html":{}}}],["type",{"_index":106,"title":{},"body":{"classes/Auth.html":{},"classes/Category.html":{},"classes/DatabaseHandler.html":{},"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"injectables/HashService.html":{},"interfaces/Pageable.html":{},"interfaces/PageableRequest.html":{},"interfaces/PageableResponse.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurantFeature.html":{},"classes/RestaurateurProfile.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":591,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":534,"title":{},"body":{"index.html":{}}}],["unit",{"_index":550,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":167,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/SeederService.html":{}}}],["unlicensed",{"_index":590,"title":{},"body":{"properties.html":{}}}],["update",{"_index":125,"title":{},"body":{"classes/Auth.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["updatedat",{"_index":105,"title":{},"body":{"classes/Auth.html":{},"classes/Reservation.html":{},"classes/Restaurant.html":{},"classes/RestaurateurProfile.html":{},"classes/UserProfile.html":{}}}],["useclass",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["user",{"_index":186,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/Favorite.html":{},"classes/Reservation.html":{},"injectables/SeederService.html":{},"classes/UserProfile.html":{},"miscellaneous/enumerations.html":{}}}],["userauth",{"_index":420,"title":{},"body":{"injectables/SeederService.html":{}}}],["userdto",{"_index":174,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userdto.avatar",{"_index":189,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userdto.banner",{"_index":190,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userdto.name",{"_index":188,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userdto.phone",{"_index":191,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["userid",{"_index":201,"title":{},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/UserProfile.html":{}}}],["userprofile",{"_index":206,"title":{"classes/UserProfile.html":{}},"body":{"classes/Favorite.html":{},"classes/Reservation.html":{},"classes/UserProfile.html":{},"coverage.html":{}}}],["userseeder",{"_index":396,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userseeder.avatar",{"_index":426,"title":{},"body":{"injectables/SeederService.html":{}}}],["userseeder.banner",{"_index":427,"title":{},"body":{"injectables/SeederService.html":{}}}],["userseeder.email",{"_index":421,"title":{},"body":{"injectables/SeederService.html":{}}}],["userseeder.name",{"_index":425,"title":{},"body":{"injectables/SeederService.html":{}}}],["userseeder.password",{"_index":422,"title":{},"body":{"injectables/SeederService.html":{}}}],["userseeder.phone",{"_index":428,"title":{},"body":{"injectables/SeederService.html":{}}}],["util/filter",{"_index":142,"title":{},"body":{"classes/DatabaseHandler.html":{}}}],["util/sort",{"_index":144,"title":{},"body":{"classes/DatabaseHandler.html":{}}}],["value",{"_index":231,"title":{},"body":{"injectables/HashService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":610,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vegan",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":588,"title":{},"body":{"properties.html":{}}}],["very_expensive",{"_index":514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["végétarien",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":545,"title":{},"body":{"index.html":{}}}],["website",{"_index":576,"title":{},"body":{"index.html":{}}}],["world",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":566,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/HashModule.html":{},"modules/SeederModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { HelmetMiddleware } from \"@nest-middlewares/helmet\";\nimport { CookieParserMiddleware } from \"@nest-middlewares/cookie-parser\";\nimport { ErrorHandlerMiddleware } from \"@nest-middlewares/errorhandler\";\nimport { RateLimiterGuard, RateLimiterModule } from \"nestjs-rate-limiter\";\nimport { APP_GUARD } from \"@nestjs/core\";\nimport { HealthModule } from \"./module/health/health.module\";\nimport { DatabaseModule } from \"./data/database/database.module\";\nimport { SeederModule } from \"./data/seeder/seeder.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    RateLimiterModule,\n    HealthModule,\n    DatabaseModule,\n    SeederModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: RateLimiterGuard,\n    },\n  ],\n})\nexport class AppModule {\n  configure(consumer: import(\"@nestjs/common\").MiddlewareConsumer) {\n    HelmetMiddleware.configure({});\n    consumer.apply(HelmetMiddleware).forRoutes(\"*\");\n    CookieParserMiddleware.configure(\"MySecret\");\n    consumer.apply(CookieParserMiddleware).forRoutes(\"*\");\n    ErrorHandlerMiddleware.configure({\n      log: false,\n    });\n    consumer.apply(ErrorHandlerMiddleware).forRoutes(\"*\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/auth.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Auth\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/auth.model.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { Role } from \"./enum\";\n\n/**\n * Model of the Auth\n * @category Models\n * @interface Auth\n * @param {string} id - id of the auth : eg. abcdef123456\n * @param {string} email - email of the auth\n * @param {string} password - password of the auth\n * @param {Date} createdAt - timestamp of the creation of the auth\n * @param {Date} updatedAt - timestamp of the last update of the auth\n * @param {Role} role - role of the auth\n */\nexport abstract class Auth implements Entity {\n  id: string;\n  email: string;\n  password: string;\n  createdAt: Date;\n  updatedAt: Date;\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/category.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Category\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                feature\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        feature\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RestaurantFeature[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/category.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/category.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/category.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { RestaurantFeature } from \"./restaurant-feature.model\";\n\n/**\n * Model of the Category\n * @category Models\n * @interface Category\n * @param {string} id - id of the category : eg. abcdef123456\n * @param {string} name - name of the category\n * @param {RestaurantFeature[]} feature - features in this category\n */\nexport abstract class Category implements Entity {\n  id: string;\n  name: string;\n  feature: RestaurantFeature[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseHandler.html":{"url":"classes/DatabaseHandler.html","title":"class - DatabaseHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/database/database-handler.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the database handler\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { Filter } from \"../util/filter\";\nimport type { Sort } from \"../util/sort\";\n\n/**\n * Interface for the database handler\n */\nexport abstract class DatabaseHandler {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_imports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nHashModule\n\nHashModule\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule -->\n\nHashModule->DatabaseModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HashModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { DatabaseService } from \"./database.service\";\nimport { PrismaService } from \"./prisma/prisma.service\";\nimport { HashModule } from \"src/util/hash/hash.module\";\n\n@Module({\n  imports: [HashModule],\n  providers: [DatabaseService, PrismaService],\n  exports: [DatabaseService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/database/database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAuth\n                            \n                            \n                                    Async\n                                createRestaurantProfile\n                            \n                            \n                                    Async\n                                createUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/data/database/database.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAuth(email: string, password: string, role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/database/database.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRestaurantProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRestaurantProfile(authId, restaurantDTO: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/database/database.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authId\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                restaurantDTO\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(authId, userDTO: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/database/database.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authId\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDTO\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from \"@nestjs/common\";\nimport { PrismaService } from \"./prisma/prisma.service\";\nimport { HashService } from \"src/util/hash/hash.service\";\nimport { Auth, Role } from \"../models\";\n\n@Injectable()\nexport class DatabaseService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async createAuth(email: string, password: string, role: Role) {\n    // Create auth\n    return this.prisma.auth.create({\n      data: {\n        email,\n        password,\n        role,\n      },\n    });\n  }\n\n  async createUser(\n    authId: Auth[\"id\"],\n    userDTO: {\n      name: string;\n      avatar: string;\n      banner: string;\n      phone?: string;\n    }\n  ) {\n    // Create user\n    return this.prisma.userProfile.create({\n      data: {\n        id: authId,\n        name: userDTO.name,\n        avatar: userDTO.avatar,\n        banner: userDTO.banner,\n        phone: userDTO.phone,\n      },\n    });\n  }\n\n  async createRestaurantProfile(\n    authId: Auth[\"id\"],\n    restaurantDTO: {\n      avatar: string;\n      banner: string;\n    }\n  ) {\n    // Create restaurant profile\n    return this.prisma.restaurateurProfile.create({\n      data: {\n        id: authId,\n        avatar: restaurantDTO.avatar,\n        banner: restaurantDTO.banner,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/entity.model.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Entity {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Favorite.html":{"url":"classes/Favorite.html","title":"class - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/favorite.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Favorite\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                restaurant\n                            \n                            \n                                restaurantId\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Restaurant\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/favorite.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { Restaurant } from \"./restaurant.model\";\nimport { UserProfile } from \"./user-profile.model\";\n\n/**\n * Model of the Favorite\n * @category Models\n * @interface Favorite\n * @param {string} id - id of the favorite : eg. abcdef123456\n * @param {UserProfile} user - user who favorited\n * @param {string} userId - id of the user : eg. abcdef123456\n * @param {Restaurant} restaurant - favorited restaurant\n * @param {string} restaurantId - id of the restaurant : eg. abcdef123456\n * @param {Date} createdAt - timestamp of the creation of the favorite\n */\nexport abstract class Favorite implements Entity {\n  id: string;\n  user?: UserProfile;\n  userId: string;\n  restaurant: Restaurant;\n  restaurantId: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HashModule.html":{"url":"modules/HashModule.html","title":"module - HashModule","body":"\n                   \n\n\n\n\n    Modules\n    HashModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HashModule\n\n\n\ncluster_HashModule_exports\n\n\n\ncluster_HashModule_providers\n\n\n\n\nHashService \n\nHashService \n\n\n\nHashModule\n\nHashModule\n\nHashService  -->\n\nHashModule->HashService \n\n\n\n\n\nHashService\n\nHashService\n\nHashModule -->\n\nHashService->HashModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/util/hash/hash.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HashService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HashService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HashService } from \"./hash.service\";\n\n@Module({\n  providers: [HashService],\n  exports: [HashService],\n})\nexport class HashModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HashService.html":{"url":"injectables/HashService.html","title":"injectable - HashService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HashService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/hash/hash.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                saltOrRounds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/hash/hash.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(password: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/util/hash/hash.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/util/hash/hash.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saltOrRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/util/hash/hash.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class HashService {\n    constructor() {}\n\n    private saltOrRounds = 10;\n    \n    async hashPassword(password: string): Promise {\n        // Hash password\n        return bcrypt.hash(password, this.saltOrRounds);\n    }\n    \n    async comparePassword(password: string, hashedPassword: string): Promise {\n        // Compare password\n        return bcrypt.compare(password, hashedPassword);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/module/health/health.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n// biome-ignore lint/style/useImportType: \nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private readonly health: HealthCheckService,\n    private readonly http: HttpHealthIndicator,\n  ) { }\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('google', 'https://google.com'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [\n    TerminusModule.forRoot({\n      errorLogStyle: 'pretty',\n      gracefulShutdownTimeoutMs: 1000,\n    }),\n    HttpModule,\n  ],\n  controllers: [HealthController],\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/model.interface.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Model {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pageable.html":{"url":"interfaces/Pageable.html","title":"interface - Pageable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pageable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/util/pageable.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PageableResponse\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pageable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageable:         PageableRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageableRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageableRequest {\n  page: number;\n  size: number;\n  sort: string;\n}\n\nexport interface PageableResponse {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  size: number;\n  number: number;\n  sort: string;\n  first: boolean;\n  numberOfElements: number;\n  empty: boolean;\n}\n\nexport interface Pageable extends PageableResponse {\n  pageable: PageableRequest;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageableRequest.html":{"url":"interfaces/PageableRequest.html","title":"interface - PageableRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageableRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/util/pageable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageableRequest {\n  page: number;\n  size: number;\n  sort: string;\n}\n\nexport interface PageableResponse {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  size: number;\n  number: number;\n  sort: string;\n  first: boolean;\n  numberOfElements: number;\n  empty: boolean;\n}\n\nexport interface Pageable extends PageableResponse {\n  pageable: PageableRequest;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageableResponse.html":{"url":"interfaces/PageableResponse.html","title":"interface - PageableResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageableResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/util/pageable.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            empty\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            numberOfElements\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                                \n                                        \n                                            totalElements\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        empty:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalElements:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PageableRequest {\n  page: number;\n  size: number;\n  sort: string;\n}\n\nexport interface PageableResponse {\n  content: T[];\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  size: number;\n  number: number;\n  sort: string;\n  first: boolean;\n  numberOfElements: number;\n  empty: boolean;\n}\n\nexport interface Pageable extends PageableResponse {\n  pageable: PageableRequest;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/database/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/database/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reservation.html":{"url":"classes/Reservation.html","title":"class - Reservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/reservation.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Reservation\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                nb_people\n                            \n                            \n                                restaurant\n                            \n                            \n                                restaurantId\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nb_people\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Restaurant\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReservationStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/reservation.model.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { ReservationStatus } from \"./enum\";\nimport { Restaurant } from \"./restaurant.model\";\nimport { UserProfile } from \"./user-profile.model\";\n\n/**\n * Model of the Reservation\n * @category Models\n * @interface Reservation\n * @param {string} id - id of the reservation : eg. abcdef123456\n * @param {Date} date - date of the reservation\n * @param {number} nb_people - number of people for the reservation\n * @param {ReservationStatus} status - status of the reservation\n * @param {UserProfile} user - user who made the reservation\n * @param {string} userId - id of the user : eg. abcdef123456\n * @param {Restaurant} restaurant - restaurant for the reservation\n * @param {string} restaurantId - id of the restaurant : eg. abcdef123456\n * @param {Date} createdAt - timestamp of the creation of the reservation\n * @param {Date} updatedAt - timestamp of the last update of the reservation\n */\nexport abstract class Reservation implements Entity {\n  id: string;\n  date: Date;\n  nb_people: number;\n  status: ReservationStatus;\n  user?: UserProfile;\n  userId?: string;\n  restaurant: Restaurant;\n  restaurantId: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport default Reservation;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Restaurant.html":{"url":"classes/Restaurant.html","title":"class - Restaurant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Restaurant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/restaurant.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the Restaurant\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                code_postal\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                favorites\n                            \n                            \n                                features\n                            \n                            \n                                id\n                            \n                            \n                                n_siret\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                price\n                            \n                            \n                                reservations\n                            \n                            \n                                restaurateur\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        code_postal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Favorite[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        features\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RestaurantFeature[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        n_siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PriceCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RestaurateurProfile[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant.model.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { PriceCategory } from \"./enum\";\nimport { Favorite } from \"./favorite.model\";\nimport Reservation from \"./reservation.model\";\nimport { RestaurantFeature } from \"./restaurant-feature.model\";\nimport { RestaurateurProfile } from \"./restaurateur-profile\";\n\n/**\n * Model of the Restaurant\n * @category Models\n * @interface Restaurant\n * @param {string} id - id of the restaurant : eg. abcdef123456\n * @param {string} name - name of the restaurant\n * @param {string} address - address of the restaurant\n * @param {string} description - description of the restaurant\n * @param {PriceCategory} price - price category of the restaurant\n * @param {string} n_siret - siret number of the restaurant\n * @param {string} phone - phone number of the restaurant\n * @param {string} code_postal - postal code of the restaurant\n * @param {string} city - city of the restaurant\n * @param {string} email - email of the restaurant\n * @param {RestaurantFeature[]} features - features of the restaurant\n * @param {Favorite[]} favorites - favorites of the restaurant\n * @param {Reservation[]} reservations - reservations of the restaurant\n * @param {Date} createdAt - timestamp of the creation of the restaurant\n * @param {Date} updatedAt - timestamp of the last update of the restaurant\n * @param {RestaurateurProfile[]} restaurateur - profiles of the restaurateurs\n */\nexport abstract class Restaurant implements Entity {\n  id: string;\n  name: string;\n  address: string;\n  description: string;\n  price: PriceCategory;\n  n_siret: string;\n  phone: string;\n  code_postal: string;\n  city: string;\n  email: string;\n  features: RestaurantFeature[];\n  favorites: Favorite[];\n  reservations: Reservation[];\n  createdAt: Date;\n  updatedAt: Date;\n  restaurateur: RestaurateurProfile[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurantFeature.html":{"url":"classes/RestaurantFeature.html","title":"class - RestaurantFeature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurantFeature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/restaurant-feature.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the RestaurantFeature\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                categoryId\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                restaurant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Restaurant[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurant-feature.model.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Category } from \"./category.model\";\nimport { Entity } from \"./entity.model\";\nimport { Restaurant } from \"./restaurant.model\";\n\n/**\n * Model of the RestaurantFeature\n * @category Models\n * @interface RestaurantFeature\n * @param {string} id - id of the feature : eg. abcdef123456\n * @param {string} name - name of the feature\n * @param {string} icon - icon of the feature\n * @param {Category} category - category of the feature\n * @param {string} categoryId - id of the category : eg. abcdef123456\n * @param {Restaurant[]} restaurant - restaurants with this feature\n */\nexport abstract class RestaurantFeature implements Entity {\n  id: string;\n  name: string;\n  icon?: string;\n  category: Category;\n  categoryId: string;\n  restaurant: Restaurant[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestaurateurProfile.html":{"url":"classes/RestaurateurProfile.html","title":"class - RestaurateurProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestaurateurProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/restaurateur-profile.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the RestaurateurProfile\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                banner\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                restaurant\n                            \n                            \n                                restaurantId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Restaurant\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/restaurateur-profile.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { Restaurant } from \"./restaurant.model\";\n\n/**\n * Model of the RestaurateurProfile\n * @category Models\n * @interface RestaurateurProfile\n * @param {string} id - id of the profile : eg. abcdef123456\n * @param {string} avatar - avatar of the restaurateur\n * @param {string} banner - banner of the restaurateur\n * @param {Restaurant} restaurant - restaurant of the profile\n * @param {string} restaurantId - id of the restaurant : eg. abcdef123456\n * @param {Date} createdAt - timestamp of the creation of the restaurant profile\n * @param {Date} updatedAt - timestamp of the last update of the restaurant profile\n */\nexport abstract class RestaurateurProfile implements Entity {\n  id: string;\n  avatar?: string;\n  banner?: string;\n  restaurant: Restaurant;\n  restaurantId: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_imports\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nDatabaseModule->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeederService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SeederService } from \"./seeder.service\";\nimport { DatabaseModule } from \"../database/database.module\";\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [SeederService],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/seeder/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                seedAdmin\n                            \n                            \n                                    Async\n                                seedAll\n                            \n                            \n                                    Async\n                                seedCategories\n                            \n                            \n                                    Async\n                                seedFavorites\n                            \n                            \n                                    Async\n                                seedReservations\n                            \n                            \n                                    Async\n                                seedRestaurantFeatures\n                            \n                            \n                                    Async\n                                seedRestaurantProfiles\n                            \n                            \n                                    Async\n                                seedRestaurants\n                            \n                            \n                                    Async\n                                seedUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/data/seeder/seeder.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedFavorites\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedFavorites()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedReservations\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedReservations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedRestaurantFeatures\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRestaurantFeatures()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedRestaurantProfiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRestaurantProfiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedRestaurants\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedRestaurants()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seedUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/seeder/seeder.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { DatabaseService } from \"../database/database.service\";\nimport { adminSeeder, userSeeder, restaurantSeeder } from \"./profile.seeder\";\nimport { Role } from \"src/data/models/enum\";\n\n@Injectable()\nexport class SeederService {\n  constructor(private readonly db: DatabaseService) {}\n\n  async seedAll() {\n    // Seed data here\n    await this.seedAdmin();\n    await this.seedUsers();\n    await this.seedRestaurantProfiles();\n  }\n\n  async seedAdmin() {\n    const adminAuth = await this.db.createAuth(\n      adminSeeder.email,\n      adminSeeder.password,\n      Role.ADMIN\n    );\n    if (!adminAuth) {\n      throw new Error(\"Failed to create admin\");\n    }\n\n    const admin = await this.db.createUser(adminAuth.id, {\n      name: adminSeeder.name,\n      avatar: adminSeeder.avatar,\n      banner: adminSeeder.banner,\n    });\n\n    if (admin) {\n      return Promise.resolve();\n    } else {\n      throw new Error(\"Failed to create admin\");\n    }\n  }\n\n  async seedUsers() {\n    // Seed user here\n    const userAuth = await this.db.createAuth(\n      userSeeder.email,\n      userSeeder.password,\n      Role.USER\n    );\n    if (!userAuth) {\n      throw new Error(\"Failed to create user\");\n    }\n\n    const user = await this.db.createUser(userAuth.id, {\n      name: userSeeder.name,\n      avatar: userSeeder.avatar,\n      banner: userSeeder.banner,\n      phone: userSeeder.phone,\n    });\n\n    if (user) {\n      return Promise.resolve();\n    } else {\n      throw new Error(\"Failed to create user\");\n    }\n  }\n\n  async seedRestaurantProfiles() {\n    // Seed restaurant profile\n    const restaurateurAuth = await this.db.createAuth(\n      restaurantSeeder.email,\n      restaurantSeeder.password,\n      Role.RESTAURATEUR\n    );\n    if (!restaurateurAuth) {\n      throw new Error(\"Failed to create restaurant\");\n    }\n\n    const restaurateur = await this.db.createRestaurantProfile(\n      restaurateurAuth.id,\n      {\n        avatar: restaurantSeeder.avatar,\n        banner: restaurantSeeder.banner,\n      }\n    );\n\n    if (restaurateur) {\n      return Promise.resolve();\n    } else {\n      throw new Error(\"Failed to create restaurant profile\");\n    }\n  }\n\n  async seedRestaurants() {\n    // Seed restaurants here\n  }\n\n  async seedRestaurantFeatures() {\n    // Seed restaurant features here\n  }\n\n  async seedCategories() {\n    // Seed categories here\n  }\n\n  async seedReservations() {\n    // Seed reservations here\n  }\n\n  async seedFavorites() {\n    // Seed favorites here\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfile.html":{"url":"classes/UserProfile.html","title":"class - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/models/user-profile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Model of the UserProfile\n\n            \n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                banner\n                            \n                            \n                                createdAt\n                            \n                            \n                                favorite\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                phone\n                            \n                            \n                                reservation\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favorite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Favorite[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/data/models/user-profile.model.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity } from \"./entity.model\";\nimport { Favorite } from \"./favorite.model\";\nimport Reservation from \"./reservation.model\";\n\n/**\n * Model of the UserProfile\n * @category Models\n * @interface UserProfile\n * @param {string} id - id of the profile : eg. abcdef123456\n * @param {string} userId - id of the user : eg. abcdef123456\n * @param {string} avatar - avatar of the user\n * @param {string} banner - banner of the user\n * @param {Favorite[]} favorite - favorites of the user\n * @param {Reservation[]} reservation - reservations of the user\n * @param {Date} createdAt - timestamp of the creation of the user profile\n * @param {Date} updatedAt - timestamp of the last update of the user profile\n */\nexport abstract class UserProfile implements Entity {\n  id: string;\n  userId: string;\n  name: string;\n  phone: string;\n  avatar?: string;\n  banner?: string;\n  favorite: Favorite[];\n  reservation: Reservation[];\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/database/database-handler.interface.ts\n            \n            class\n            DatabaseHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/data/database/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/data/database/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/models/auth.model.ts\n            \n            class\n            Auth\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/data/models/category.model.ts\n            \n            class\n            Category\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/data/models/entity.model.ts\n            \n            interface\n            Entity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/models/favorite.model.ts\n            \n            class\n            Favorite\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/data/models/model.interface.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/models/reservation.model.ts\n            \n            class\n            Reservation\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/data/models/restaurant-feature.model.ts\n            \n            class\n            RestaurantFeature\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/data/models/restaurant.model.ts\n            \n            class\n            Restaurant\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                src/data/models/restaurateur-profile.ts\n            \n            class\n            RestaurateurProfile\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/data/models/user-profile.model.ts\n            \n            class\n            UserProfile\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/data/seeder/features.seeder.ts\n            \n            variable\n            categoriesFeaturesSeeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/seeder/features.seeder.ts\n            \n            variable\n            featuresSeeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/seeder/profile.seeder.ts\n            \n            variable\n            adminSeeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/seeder/profile.seeder.ts\n            \n            variable\n            restaurantSeeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/seeder/profile.seeder.ts\n            \n            variable\n            userSeeder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/seeder/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/data/util/pageable.ts\n            \n            interface\n            Pageable\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/util/pageable.ts\n            \n            interface\n            PageableRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/data/util/pageable.ts\n            \n            interface\n            PageableResponse\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/repl.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/hash/hash.service.ts\n            \n            injectable\n            HashService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nest-middlewares/cookie-parser : ^10.0.0\n        \n            @nest-middlewares/errorhandler : ^10.0.0\n        \n            @nest-middlewares/helmet : ^10.0.0\n        \n            @nestjs/axios : ^3.0.2\n        \n            @nestjs/common : ^10.3.3\n        \n            @nestjs/config : ^3.2.0\n        \n            @nestjs/core : ^10.3.3\n        \n            @nestjs/platform-express : ^10.3.3\n        \n            @nestjs/swagger : ^7.3.0\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @prisma/client : ^5.10.2\n        \n            bcrypt : ^5.1.1\n        \n            cuid : ^3.0.0\n        \n            nestjs-rate-limiter : ^3.1.0\n        \n            reflect-metadata : ^0.1.14\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriceCategory   (src/.../price-category.enum.ts)\n                        \n                        \n                            ReservationStatus   (src/.../reservation-status.enum.ts)\n                        \n                        \n                            Role   (src/.../role-enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data/models/enum/price-category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriceCategory\n                    \n                \n                        \n                            \n                                 ECO\n                            \n                        \n                        \n                            \n                                Value : ECO\n                            \n                        \n                        \n                            \n                                 MODERATE\n                            \n                        \n                        \n                            \n                                Value : MODERATE\n                            \n                        \n                        \n                            \n                                 EXPENSIVE\n                            \n                        \n                        \n                            \n                                Value : EXPENSIVE\n                            \n                        \n                        \n                            \n                                 VERY_EXPENSIVE\n                            \n                        \n                        \n                            \n                                Value : VERY_EXPENSIVE\n                            \n                        \n            \n        \n\n    src/data/models/enum/reservation-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ReservationStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : ACCEPTED\n                            \n                        \n                        \n                            \n                                 REFUSED\n                            \n                        \n                        \n                            \n                                Value : REFUSED\n                            \n                        \n            \n        \n\n    src/data/models/enum/role-enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 RESTAURATEUR\n                            \n                        \n                        \n                            \n                                Value : RESTAURATEUR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HashModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_imports\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_HashModule\n\n\n\ncluster_HashModule_exports\n\n\n\ncluster_HashModule_providers\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nSeederModule\n\nSeederModule\n\nSeederModule -->\n\nDatabaseModule->SeederModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nAppModule -->\n\nSeederModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nHashModule\n\nHashModule\n\nDatabaseModule -->\n\nHashModule->DatabaseModule\n\n\n\n\n\nHashService \n\nHashService \n\nHashService  -->\n\nHashModule->HashService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDatabaseModule -->\n\nPrismaService->DatabaseModule\n\n\n\n\n\nHashService\n\nHashService\n\nHashModule -->\n\nHashService->HashModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Filter   (src/.../filter.ts)\n                        \n                        \n                            FilterValue   (src/.../filter.ts)\n                        \n                        \n                            Path   (src/.../path.ts)\n                        \n                        \n                            PathValue   (src/.../path.ts)\n                        \n                        \n                            Sort   (src/.../sort.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data/util/filter.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                    used to filter an entity E when fetching from the database\neg :  Filter = { foo.bar :{ is: \"fuzz\" } }\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterValue\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/data/util/path.ts\n    \n    \n        \n            \n                \n                    \n                    Path\n                \n            \n            \n                \n                    type A = { foo: {bar : string} } => Path = 'foo' | 'foo.bar'\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PathValue\n                \n            \n            \n                \n                    type A = { foo: {bar : string} } => PathValue = {bar : string} / PathValue = string\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/data/util/sort.ts\n    \n    \n        \n            \n                \n                    \n                    Sort\n                \n            \n            \n                \n                    used to sort an entity E when fetching from the database\neg :  Sort = { foo.bar : \"asc\" }\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminSeeder   (src/.../profile.seeder.ts)\n                        \n                        \n                            categoriesFeaturesSeeder   (src/.../features.seeder.ts)\n                        \n                        \n                            featuresSeeder   (src/.../features.seeder.ts)\n                        \n                        \n                            restaurantSeeder   (src/.../profile.seeder.ts)\n                        \n                        \n                            userSeeder   (src/.../profile.seeder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data/seeder/profile.seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminSeeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  email: \"admin@munch.com\",\n  password: \"admin\",\n  name: \"Administrator\",\n  avatar: \"https://api.dicebear.com/8.x/shapes/svg?seed=Sugar\",\n  banner: \"https://picsum.photos/seed/munch/800\",\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restaurantSeeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  email: \"restaurateur@test.com\",\n  password: \"restaurateur\",\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSeeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  email: \"client@test.com\",\n  password: \"client\",\n  name: \"Client\",\n  avatar: \"https://api.dicebear.com/8.x/shapes/svg?seed=Client\",\n  banner: \"https://picsum.photos/seed/client/800\",\n  phone: \"+33612345678\",\n}\n                    \n                \n\n\n        \n    \n\n    src/data/seeder/features.seeder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoriesFeaturesSeeder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    index: 0,\n    name: \"Régime alimentaire\",\n  },\n  {\n    index: 1,\n    name: \"Type de cuisine\",\n  },\n  {\n    index: 2,\n    name: \"Type d'établissement\",\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featuresSeeder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    name: \"Végétarien\",\n    icon: \"🥦\",\n  },\n  {\n    name: \"Vegan\",\n    icon: \"🌱\",\n  },\n  {\n    name: \"Sans gluten\",\n    icon: \"🌾\",\n  },\n  {\n    name: \"Halal\",\n    icon: \"🥩\",\n  },\n  {\n    name: \"Cacherout\",\n    icon: \"🔯\",\n  },\n] as RestaurantFeature[]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
